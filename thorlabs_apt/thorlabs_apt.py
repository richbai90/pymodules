

# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _thorlabs_apt
else:
    import _thorlabs_apt

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (
        self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError(
                "You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


HWTYPE_BSC001 = _thorlabs_apt.HWTYPE_BSC001
HWTYPE_BSC101 = _thorlabs_apt.HWTYPE_BSC101
HWTYPE_BSC002 = _thorlabs_apt.HWTYPE_BSC002
HWTYPE_BDC101 = _thorlabs_apt.HWTYPE_BDC101
HWTYPE_SCC001 = _thorlabs_apt.HWTYPE_SCC001
HWTYPE_DCC001 = _thorlabs_apt.HWTYPE_DCC001
HWTYPE_ODC001 = _thorlabs_apt.HWTYPE_ODC001
HWTYPE_OST001 = _thorlabs_apt.HWTYPE_OST001
HWTYPE_MST601 = _thorlabs_apt.HWTYPE_MST601
HWTYPE_TST001 = _thorlabs_apt.HWTYPE_TST001
HWTYPE_TDC001 = _thorlabs_apt.HWTYPE_TDC001
HWTYPE_TSC001 = _thorlabs_apt.HWTYPE_TSC001
HWTYPE_TIM001 = _thorlabs_apt.HWTYPE_TIM001
HWTYPE_LTSXXX = _thorlabs_apt.HWTYPE_LTSXXX
HWTYPE_L490MZ = _thorlabs_apt.HWTYPE_L490MZ
HWTYPE_BBD10X = _thorlabs_apt.HWTYPE_BBD10X
HWTYPE_TBD001 = _thorlabs_apt.HWTYPE_TBD001
HWTYPE_FW105 = _thorlabs_apt.HWTYPE_FW105
HWTYPE_MLJ050 = _thorlabs_apt.HWTYPE_MLJ050
HWTYPE_MFF10X = _thorlabs_apt.HWTYPE_MFF10X
HWTYPE_K100CR1 = _thorlabs_apt.HWTYPE_K100CR1
HWTYPE_KST101 = _thorlabs_apt.HWTYPE_KST101
HWTYPE_KSC101 = _thorlabs_apt.HWTYPE_KSC101
HWTYPE_KIM101 = _thorlabs_apt.HWTYPE_KIM101
HWTYPE_KIM001 = _thorlabs_apt.HWTYPE_KIM001
HWTYPE_KBD101 = _thorlabs_apt.HWTYPE_KBD101
HWTYPE_KDC101 = _thorlabs_apt.HWTYPE_KDC101
CHAN1_INDEX = _thorlabs_apt.CHAN1_INDEX
CHAN2_INDEX = _thorlabs_apt.CHAN2_INDEX
MOT_CHAN1_INDEX = _thorlabs_apt.MOT_CHAN1_INDEX
MOT_CHAN2_INDEX = _thorlabs_apt.MOT_CHAN2_INDEX
HOME_FWD = _thorlabs_apt.HOME_FWD
HOME_REV = _thorlabs_apt.HOME_REV
MOT_HOME_FWD = _thorlabs_apt.MOT_HOME_FWD
MOT_HOME_REV = _thorlabs_apt.MOT_HOME_REV
HOMELIMSW_FWD = _thorlabs_apt.HOMELIMSW_FWD
HOMELIMSW_REV = _thorlabs_apt.HOMELIMSW_REV
MOT_HOMELIMSW_FWD = _thorlabs_apt.MOT_HOMELIMSW_FWD
MOT_HOMELIMSW_REV = _thorlabs_apt.MOT_HOMELIMSW_REV
MOT_JOG_CONTINUOUS = _thorlabs_apt.MOT_JOG_CONTINUOUS
MOT_JOG_SINGLESTEP = _thorlabs_apt.MOT_JOG_SINGLESTEP
MOT_JOGSTOP_IMMEDIATE = _thorlabs_apt.MOT_JOGSTOP_IMMEDIATE
MOT_JOGSTOP_PROFILED = _thorlabs_apt.MOT_JOGSTOP_PROFILED
STAGE_UNITS_MM = _thorlabs_apt.STAGE_UNITS_MM
STAGE_UNITS_DEG = _thorlabs_apt.STAGE_UNITS_DEG
MOT_STAGE_UNITS_MM = _thorlabs_apt.MOT_STAGE_UNITS_MM
MOT_STAGE_UNITS_DEG = _thorlabs_apt.MOT_STAGE_UNITS_DEG
HWLIMSWITCH_IGNORE = _thorlabs_apt.HWLIMSWITCH_IGNORE
HWLIMSWITCH_MAKES = _thorlabs_apt.HWLIMSWITCH_MAKES
HWLIMSWITCH_BREAKS = _thorlabs_apt.HWLIMSWITCH_BREAKS
HWLIMSWITCH_MAKES_HOMEONLY = _thorlabs_apt.HWLIMSWITCH_MAKES_HOMEONLY
HWLIMSWITCH_BREAKS_HOMEONLY = _thorlabs_apt.HWLIMSWITCH_BREAKS_HOMEONLY
MOT_HWLIMSWITCH_IGNORE = _thorlabs_apt.MOT_HWLIMSWITCH_IGNORE
MOT_HWLIMSWITCH_MAKES = _thorlabs_apt.MOT_HWLIMSWITCH_MAKES
MOT_HWLIMSWITCH_BREAKS = _thorlabs_apt.MOT_HWLIMSWITCH_BREAKS
MOT_HWLIMSWITCH_MAKES_HOMEONLY = _thorlabs_apt.MOT_HWLIMSWITCH_MAKES_HOMEONLY
MOT_HWLIMSWITCH_BREAKS_HOMEONLY = _thorlabs_apt.MOT_HWLIMSWITCH_BREAKS_HOMEONLY
MOVE_FWD = _thorlabs_apt.MOVE_FWD
MOVE_REV = _thorlabs_apt.MOVE_REV
MOT_MOVEVEL_FWD = _thorlabs_apt.MOT_MOVEVEL_FWD
MOT_MOVEVEL_REV = _thorlabs_apt.MOT_MOVEVEL_REV
MOT_JOGFWD = _thorlabs_apt.MOT_JOGFWD
MOT_JOGREV = _thorlabs_apt.MOT_JOGREV
MOT_ROTMOVE_POS = _thorlabs_apt.MOT_ROTMOVE_POS
MOT_ROTMOVE_NEG = _thorlabs_apt.MOT_ROTMOVE_NEG
MOT_ROTMOVE_SHORT = _thorlabs_apt.MOT_ROTMOVE_SHORT
DC_PROFILEMODE_TRAPEZOIDAL = _thorlabs_apt.DC_PROFILEMODE_TRAPEZOIDAL
DC_PROFILEMODE_SCURVE = _thorlabs_apt.DC_PROFILEMODE_SCURVE
MOT_DC_PROFILEMODE_TRAPEZOIDAL = _thorlabs_apt.MOT_DC_PROFILEMODE_TRAPEZOIDAL
MOT_DC_PROFILEMODE_SCURVE = _thorlabs_apt.MOT_DC_PROFILEMODE_SCURVE
DC_JS_DIRSENSE_POS = _thorlabs_apt.DC_JS_DIRSENSE_POS
DC_JS_DIRSENSE_NEG = _thorlabs_apt.DC_JS_DIRSENSE_NEG
MOT_DC_JS_DIRSENSE_POS = _thorlabs_apt.MOT_DC_JS_DIRSENSE_POS
MOT_DC_JS_DIRSENSE_NEG = _thorlabs_apt.MOT_DC_JS_DIRSENSE_NEG
MOT_DC_TRIGIN_DISABLED = _thorlabs_apt.MOT_DC_TRIGIN_DISABLED
MOT_DC_TRIGINHIGH_RELMOVE = _thorlabs_apt.MOT_DC_TRIGINHIGH_RELMOVE
MOT_DC_TRIGINLOW_RELMOVE = _thorlabs_apt.MOT_DC_TRIGINLOW_RELMOVE
MOT_DC_TRIGINHIGH_ABSMOVE = _thorlabs_apt.MOT_DC_TRIGINHIGH_ABSMOVE
MOT_DC_TRIGINLOW_ABSMOVE = _thorlabs_apt.MOT_DC_TRIGINLOW_ABSMOVE
MOT_DC_TRIGINHIGH_HOMEMOVE = _thorlabs_apt.MOT_DC_TRIGINHIGH_HOMEMOVE
MOT_DC_TRIGINLOW_HOMEMOVE = _thorlabs_apt.MOT_DC_TRIGINLOW_HOMEMOVE
MOT_DC_TRIGOUT_DISABLED = _thorlabs_apt.MOT_DC_TRIGOUT_DISABLED
MOT_DC_TRIGOUTHIGH_INMOTION = _thorlabs_apt.MOT_DC_TRIGOUTHIGH_INMOTION
MOT_DC_TRIGOUTLOW_INMOTION = _thorlabs_apt.MOT_DC_TRIGOUTLOW_INMOTION
MOT_DC_TRIGOUTHIGH_MOTIONCOMPLETE = _thorlabs_apt.MOT_DC_TRIGOUTHIGH_MOTIONCOMPLETE
MOT_DC_TRIGOUTLOW_MOTIONCOMPLETE = _thorlabs_apt.MOT_DC_TRIGOUTLOW_MOTIONCOMPLETE
MOT_DC_TRIGOUTHIGH_MAXVELOCITY = _thorlabs_apt.MOT_DC_TRIGOUTHIGH_MAXVELOCITY
MOT_DC_TRIGOUTLOW_MAXVELOCITY = _thorlabs_apt.MOT_DC_TRIGOUTLOW_MAXVELOCITY
KMOT_WHL_VELOCITY = _thorlabs_apt.KMOT_WHL_VELOCITY
KMOT_WHL_JOG = _thorlabs_apt.KMOT_WHL_JOG
KMOT_WHL_GOTOPOSITION = _thorlabs_apt.KMOT_WHL_GOTOPOSITION
KMOT_WHL_DIRSENSE_DISABLED = _thorlabs_apt.KMOT_WHL_DIRSENSE_DISABLED
KMOT_WHL_DIRSENSE_POS = _thorlabs_apt.KMOT_WHL_DIRSENSE_POS
KMOT_WHL_DIRSENSE_NEG = _thorlabs_apt.KMOT_WHL_DIRSENSE_NEG
KMOT_TRIG_ISDISABLED = _thorlabs_apt.KMOT_TRIG_ISDISABLED
KMOT_TRIGIN_GPI = _thorlabs_apt.KMOT_TRIGIN_GPI
KMOT_TRIGIN_RELMOVE = _thorlabs_apt.KMOT_TRIGIN_RELMOVE
KMOT_TRIGIN_ABSMOVE = _thorlabs_apt.KMOT_TRIGIN_ABSMOVE
KMOT_TRIGIN_HOME = _thorlabs_apt.KMOT_TRIGIN_HOME
KMOT_TRIGOUT_GPO = _thorlabs_apt.KMOT_TRIGOUT_GPO
KMOT_TRIGOUT_INMOTION = _thorlabs_apt.KMOT_TRIGOUT_INMOTION
KMOT_TRIGOUT_MAXVELOCITY = _thorlabs_apt.KMOT_TRIGOUT_MAXVELOCITY
KMOT_TRIGOUT_POSSTEPS_FWD = _thorlabs_apt.KMOT_TRIGOUT_POSSTEPS_FWD
KMOT_TRIGOUT_POSSTEPS_REV = _thorlabs_apt.KMOT_TRIGOUT_POSSTEPS_REV
KMOT_TRIGOUT_POSSTEPS_BOTH = _thorlabs_apt.KMOT_TRIGOUT_POSSTEPS_BOTH
KMOT_TRIGOUT_FWDLIMIT = _thorlabs_apt.KMOT_TRIGOUT_FWDLIMIT
KMOT_TRIGOUT_REVLIMIT = _thorlabs_apt.KMOT_TRIGOUT_REVLIMIT
KMOT_TRIGOUT_EITHERLIMIT = _thorlabs_apt.KMOT_TRIGOUT_EITHERLIMIT
KMOT_TRIG_POLHIGH = _thorlabs_apt.KMOT_TRIG_POLHIGH
KMOT_TRIG_POLLOW = _thorlabs_apt.KMOT_TRIG_POLLOW
KMOT_KST_OPENLOOP = _thorlabs_apt.KMOT_KST_OPENLOOP
KMOT_KST_CLOSEDLOOP = _thorlabs_apt.KMOT_KST_CLOSEDLOOP
MFF_JOGFWD = _thorlabs_apt.MFF_JOGFWD
MFF_JOGREV = _thorlabs_apt.MFF_JOGREV
MFF_OPMODE_IP_TOGGLEPOS = _thorlabs_apt.MFF_OPMODE_IP_TOGGLEPOS
MFF_OPMODE_IP_GOTOPOS = _thorlabs_apt.MFF_OPMODE_IP_GOTOPOS
MFF_OPMODE_OP_ATPOS = _thorlabs_apt.MFF_OPMODE_OP_ATPOS
MFF_OPMODE_OP_MOVING = _thorlabs_apt.MFF_OPMODE_OP_MOVING
MFF_SIGNALMODE_IP_BUTTON = _thorlabs_apt.MFF_SIGNALMODE_IP_BUTTON
MFF_SIGNALMODE_IP_LOGIC = _thorlabs_apt.MFF_SIGNALMODE_IP_LOGIC
MFF_SIGNALMODE_IP_SWAP = _thorlabs_apt.MFF_SIGNALMODE_IP_SWAP
MFF_SIGNALMODE_OP_LEVEL = _thorlabs_apt.MFF_SIGNALMODE_OP_LEVEL
MFF_SIGNALMODE_OP_PULSE = _thorlabs_apt.MFF_SIGNALMODE_OP_PULSE
MFF_SIGNALMODE_OP_INVERT = _thorlabs_apt.MFF_SIGNALMODE_OP_INVERT
SC_MANUAL = _thorlabs_apt.SC_MANUAL
SC_SINGLE = _thorlabs_apt.SC_SINGLE
SC_AUTO = _thorlabs_apt.SC_AUTO
SC_TRIGGER = _thorlabs_apt.SC_TRIGGER
PZMOT_JOG_CONTINUOUS = _thorlabs_apt.PZMOT_JOG_CONTINUOUS
PZMOT_JOG_SINGLESTEP = _thorlabs_apt.PZMOT_JOG_SINGLESTEP
PZMOT_BUTTON_JOG = _thorlabs_apt.PZMOT_BUTTON_JOG
PZMOT_BUTTON_POSITION = _thorlabs_apt.PZMOT_BUTTON_POSITION
KPZMOT_JOY_VELOCITY = _thorlabs_apt.KPZMOT_JOY_VELOCITY
KPZMOT_JOY_JOG = _thorlabs_apt.KPZMOT_JOY_JOG
KPZMOT_JOY_GOTOPOSITION = _thorlabs_apt.KPZMOT_JOY_GOTOPOSITION
KPZMOT_JOY_DIRSENSE_DISABLED = _thorlabs_apt.KPZMOT_JOY_DIRSENSE_DISABLED
KPZMOT_JOY_DIRSENSE_POS = _thorlabs_apt.KPZMOT_JOY_DIRSENSE_POS
KPZMOT_JOY_DIRSENSE_NEG = _thorlabs_apt.KPZMOT_JOY_DIRSENSE_NEG
KPZMOT_CHAN1 = _thorlabs_apt.KPZMOT_CHAN1
KPZMOT_CHAN2 = _thorlabs_apt.KPZMOT_CHAN2
KPZMOT_CHAN3 = _thorlabs_apt.KPZMOT_CHAN3
KPZMOT_CHAN4 = _thorlabs_apt.KPZMOT_CHAN4
KPZMOT_TRIG_ISDISABLED = _thorlabs_apt.KPZMOT_TRIG_ISDISABLED
KPZMOT_TRIG_IN_GPI = _thorlabs_apt.KPZMOT_TRIG_IN_GPI
KPZMOT_TRIG_IN_RELMOVE = _thorlabs_apt.KPZMOT_TRIG_IN_RELMOVE
KPZMOT_TRIG_IN_ABSMOVE = _thorlabs_apt.KPZMOT_TRIG_IN_ABSMOVE
KPZMOT_TRIG_IN_RESETCOUNT = _thorlabs_apt.KPZMOT_TRIG_IN_RESETCOUNT
KPZMOT_TRIG_OUT_GPO = _thorlabs_apt.KPZMOT_TRIG_OUT_GPO
KPZMOT_TRIG_OUT_INMOTION = _thorlabs_apt.KPZMOT_TRIG_OUT_INMOTION
KPZMOT_TRIG_OUT_MAXVELOCITY = _thorlabs_apt.KPZMOT_TRIG_OUT_MAXVELOCITY
KPZMOT_TRIG_OUT_POSSTEPS_FWD = _thorlabs_apt.KPZMOT_TRIG_OUT_POSSTEPS_FWD
KPZMOT_TRIG_OUT_POSSTEPS_REV = _thorlabs_apt.KPZMOT_TRIG_OUT_POSSTEPS_REV
KPZMOT_TRIG_OUT_POSSTEPS_BOTH = _thorlabs_apt.KPZMOT_TRIG_OUT_POSSTEPS_BOTH
KPZMOT_TRIG_OUT_FWDLIMIT = _thorlabs_apt.KPZMOT_TRIG_OUT_FWDLIMIT
KPZMOT_TRIG_OUT_REVLIMIT = _thorlabs_apt.KPZMOT_TRIG_OUT_REVLIMIT
KPZMOT_TRIG_OUT_EITHERLIMIT = _thorlabs_apt.KPZMOT_TRIG_OUT_EITHERLIMIT
KPZMOT_TRIG_POLHIGH = _thorlabs_apt.KPZMOT_TRIG_POLHIGH
KPZMOT_TRIG_POLLOW = _thorlabs_apt.KPZMOT_TRIG_POLLOW
PZMOT_ENABLE_NONE = _thorlabs_apt.PZMOT_ENABLE_NONE
PZMOT_ENABLE_SINGLE1 = _thorlabs_apt.PZMOT_ENABLE_SINGLE1
PZMOT_ENABLE_SINGLE2 = _thorlabs_apt.PZMOT_ENABLE_SINGLE2
PZMOT_ENABLE_SINGLE3 = _thorlabs_apt.PZMOT_ENABLE_SINGLE3
PZMOT_ENABLE_SINGLE4 = _thorlabs_apt.PZMOT_ENABLE_SINGLE4
PZMOT_ENABLE_PAIR_12 = _thorlabs_apt.PZMOT_ENABLE_PAIR_12
PZMOT_ENABLE_PAIR_34 = _thorlabs_apt.PZMOT_ENABLE_PAIR_34
PZMOT_KIMFB_NOINPUT = _thorlabs_apt.PZMOT_KIMFB_NOINPUT
PZMOT_KIMFB_LIMSSWITCH = _thorlabs_apt.PZMOT_KIMFB_LIMSSWITCH
PZMOT_KIMFB_ENCODER = _thorlabs_apt.PZMOT_KIMFB_ENCODER
PZMOT_MOVEVEL_FWD = _thorlabs_apt.PZMOT_MOVEVEL_FWD
PZMOT_MOVEVEL_REV = _thorlabs_apt.PZMOT_MOVEVEL_REV
PZMOT_JOGFWD = _thorlabs_apt.PZMOT_JOGFWD
PZMOT_JOGREV = _thorlabs_apt.PZMOT_JOGREV


def APTInit():
    return _thorlabs_apt.APTInit()


def APTCleanUp():
    return _thorlabs_apt.APTCleanUp()


def GetNumHWUnitsEx(lHWType, plNumUnits):
    return _thorlabs_apt.GetNumHWUnitsEx(lHWType, plNumUnits)


def GetHWSerialNumEx(lHWType, lIndex, plSerialNum):
    return _thorlabs_apt.GetHWSerialNumEx(lHWType, lIndex, plSerialNum)


def GetHWInfo(
        lSerialNum, szModel, lModelLen, szSWVer, lSWVerLen, szHWNotes,
        lHWNotesLen):
    return _thorlabs_apt.GetHWInfo(
        lSerialNum, szModel, lModelLen, szSWVer, lSWVerLen, szHWNotes,
        lHWNotesLen)


def InitHWDevice(lSerialNum):
    return _thorlabs_apt.InitHWDevice(lSerialNum)


def EnableEventDlg(bEnable):
    return _thorlabs_apt.EnableEventDlg(bEnable)


def DoEvents():
    return _thorlabs_apt.DoEvents()


def MOT_ConnectHomeCompleteCallback(lSerialNum, pFnHomeCallback):
    return _thorlabs_apt.MOT_ConnectHomeCompleteCallback(
        lSerialNum, pFnHomeCallback)


def MOT_DisconnectHomeCompleteCallback(lSerialNum, pFnHomeCallback):
    return _thorlabs_apt.MOT_DisconnectHomeCompleteCallback(
        lSerialNum, pFnHomeCallback)


def MOT_ConnectMoveCompleteCallback(lSerialNum, pFnMoveCallback):
    return _thorlabs_apt.MOT_ConnectMoveCompleteCallback(
        lSerialNum, pFnMoveCallback)


def MOT_DisconnectMoveCompleteCallback(lSerialNum, pFnMoveCallback):
    return _thorlabs_apt.MOT_DisconnectMoveCompleteCallback(
        lSerialNum, pFnMoveCallback)


def MOT_LLSetEncoderCount(lSerialNum, lEncCount):
    return _thorlabs_apt.MOT_LLSetEncoderCount(lSerialNum, lEncCount)


def MOT_LLGetEncoderCount(lSerialNum, plEncCount):
    return _thorlabs_apt.MOT_LLGetEncoderCount(lSerialNum, plEncCount)


def MOT_LLSetGetDigOPs(lSerialNum, bSet, plBits):
    return _thorlabs_apt.MOT_LLSetGetDigOPs(lSerialNum, bSet, plBits)


def MOT_LLGetADCInputs(lSerialNum, plADCVal1, plADCVal2):
    return _thorlabs_apt.MOT_LLGetADCInputs(lSerialNum, plADCVal1, plADCVal2)


def MOT_SetChannel(lSerialNum, lChanID):
    return _thorlabs_apt.MOT_SetChannel(lSerialNum, lChanID)


def MOT_Identify(lSerialNum):
    return _thorlabs_apt.MOT_Identify(lSerialNum)


def MOT_EnableHWChannel(lSerialNum):
    return _thorlabs_apt.MOT_EnableHWChannel(lSerialNum)


def MOT_DisableHWChannel(lSerialNum):
    return _thorlabs_apt.MOT_DisableHWChannel(lSerialNum)


def MOT_SetVelParams(lSerialNum, fMinVel, fAccn, fMaxVel):
    return _thorlabs_apt.MOT_SetVelParams(lSerialNum, fMinVel, fAccn, fMaxVel)


def MOT_GetVelParams(lSerialNum, pfMinVel, pfAccn, pfMaxVel):
    return _thorlabs_apt.MOT_GetVelParams(
        lSerialNum, pfMinVel, pfAccn, pfMaxVel)


def MOT_GetVelParamLimits(lSerialNum, pfMaxAccn, pfMaxVel):
    return _thorlabs_apt.MOT_GetVelParamLimits(lSerialNum, pfMaxAccn, pfMaxVel)


def MOT_SetHomeParams(
        lSerialNum, lDirection, lLimSwitch, fHomeVel, fZeroOffset):
    return _thorlabs_apt.MOT_SetHomeParams(
        lSerialNum, lDirection, lLimSwitch, fHomeVel, fZeroOffset)


def MOT_GetHomeParams(
        lSerialNum, plDirection, plLimSwitch, pfHomeVel, pfZeroOffset):
    return _thorlabs_apt.MOT_GetHomeParams(
        lSerialNum, plDirection, plLimSwitch, pfHomeVel, pfZeroOffset)


def MOT_SetJogParams(
        lSerialNum, lMode, lStopMode, fStepSize, fMinVel, fAccn, fMaxVel):
    return _thorlabs_apt.MOT_SetJogParams(
        lSerialNum, lMode, lStopMode, fStepSize, fMinVel, fAccn, fMaxVel)


def MOT_GetJogParams(
        lSerialNum, plMode, plStopMode, pfStepSize, pfMinVel, pfAccn, pfMaxVel):
    return _thorlabs_apt.MOT_GetJogParams(
        lSerialNum, plMode, plStopMode, pfStepSize, pfMinVel, pfAccn, pfMaxVel)


def MOT_GetStatusBits(lSerialNum, plStatusBits):
    return _thorlabs_apt.MOT_GetStatusBits(lSerialNum, plStatusBits)


def MOT_SetBLashDist(lSerialNum, fBLashDist):
    return _thorlabs_apt.MOT_SetBLashDist(lSerialNum, fBLashDist)


def MOT_GetBLashDist(lSerialNum, pfBLashDist):
    return _thorlabs_apt.MOT_GetBLashDist(lSerialNum, pfBLashDist)


def MOT_SetMotorParams(lSerialNum, lStepsPerRev, lGearBoxRatio):
    return _thorlabs_apt.MOT_SetMotorParams(
        lSerialNum, lStepsPerRev, lGearBoxRatio)


def MOT_GetMotorParams(lSerialNum, plStepsPerRev, plGearBoxRatio):
    return _thorlabs_apt.MOT_GetMotorParams(
        lSerialNum, plStepsPerRev, plGearBoxRatio)


def MOT_SetStageAxisInfo(lSerialNum, fMinPos, fMaxPos, lUnits, fPitch):
    return _thorlabs_apt.MOT_SetStageAxisInfo(
        lSerialNum, fMinPos, fMaxPos, lUnits, fPitch)


def MOT_GetStageAxisInfo(lSerialNum, pfMinPos, pfMaxPos, plUnits, pfPitch):
    return _thorlabs_apt.MOT_GetStageAxisInfo(
        lSerialNum, pfMinPos, pfMaxPos, plUnits, pfPitch)


def MOT_SetHWLimSwitches(lSerialNum, lRevLimSwitch, lFwdLimSwitch):
    return _thorlabs_apt.MOT_SetHWLimSwitches(
        lSerialNum, lRevLimSwitch, lFwdLimSwitch)


def MOT_GetHWLimSwitches(lSerialNum, plRevLimSwitch, plFwdLimSwitch):
    return _thorlabs_apt.MOT_GetHWLimSwitches(
        lSerialNum, plRevLimSwitch, plFwdLimSwitch)


def MOT_SetPIDParams(lSerialNum, lProp, lInt, lDeriv, lIntLimit):
    return _thorlabs_apt.MOT_SetPIDParams(
        lSerialNum, lProp, lInt, lDeriv, lIntLimit)


def MOT_GetPIDParams(lSerialNum, plProp, plInt, plDeriv, plIntLimit):
    return _thorlabs_apt.MOT_GetPIDParams(
        lSerialNum, plProp, plInt, plDeriv, plIntLimit)


def MOT_SetPhaseCurrents(lSerialNum, lRestVal, lMoveVal):
    return _thorlabs_apt.MOT_SetPhaseCurrents(lSerialNum, lRestVal, lMoveVal)


def MOT_GetPhaseCurrents(lSerialNum, plRestVal, plMoveVal):
    return _thorlabs_apt.MOT_GetPhaseCurrents(lSerialNum, plRestVal, plMoveVal)


def MOT_GetPosition(lSerialNum, pfPosition):
    return _thorlabs_apt.MOT_GetPosition(lSerialNum, pfPosition)


def MOT_GetPositionEx(lSerialNum, pfCalibPosition, pfUncalibPosition):
    return _thorlabs_apt.MOT_GetPositionEx(
        lSerialNum, pfCalibPosition, pfUncalibPosition)


def MOT_MoveHome(lSerialNum, bWait):
    return _thorlabs_apt.MOT_MoveHome(lSerialNum, bWait)


def MOT_MoveRelativeEx(lSerialNum, fRelDist, bWait):
    return _thorlabs_apt.MOT_MoveRelativeEx(lSerialNum, fRelDist, bWait)


def MOT_MoveAbsoluteEx(lSerialNum, fAbsPos, bWait):
    return _thorlabs_apt.MOT_MoveAbsoluteEx(lSerialNum, fAbsPos, bWait)


def MOT_MoveVelocity(lSerialNum, lDirection):
    return _thorlabs_apt.MOT_MoveVelocity(lSerialNum, lDirection)


def MOT_MoveJog(lSerialNum, lJogDir):
    return _thorlabs_apt.MOT_MoveJog(lSerialNum, lJogDir)


def MOT_MoveAbsoluteRot(lSerialNum, fAnglePos, lMoveMode, bWait):
    return _thorlabs_apt.MOT_MoveAbsoluteRot(
        lSerialNum, fAnglePos, lMoveMode, bWait)


def MOT_StopProfiled(lSerialNum):
    return _thorlabs_apt.MOT_StopProfiled(lSerialNum)


def MOT_SetDCCurrentLoopParams(
        lSerialNum, lProp, lInt, lIntLim, lIntDeadBand, lFFwd):
    return _thorlabs_apt.MOT_SetDCCurrentLoopParams(
        lSerialNum, lProp, lInt, lIntLim, lIntDeadBand, lFFwd)


def MOT_GetDCCurrentLoopParams(
        lSerialNum, plProp, plInt, plIntLim, plIntDeadBand, plFFwd):
    return _thorlabs_apt.MOT_GetDCCurrentLoopParams(
        lSerialNum, plProp, plInt, plIntLim, plIntDeadBand, plFFwd)


def MOT_SetDCPositionLoopParams(
        lSerialNum, lProp, lInt, lIntLim, lDeriv, lDerivTime, lLoopGain,
        lVelFFwd, lAccFFwd, lPosErrLim):
    return _thorlabs_apt.MOT_SetDCPositionLoopParams(
        lSerialNum, lProp, lInt, lIntLim, lDeriv, lDerivTime, lLoopGain,
        lVelFFwd, lAccFFwd, lPosErrLim)


def MOT_GetDCPositionLoopParams(
        lSerialNum, plProp, plInt, plIntLim, plDeriv, plDerivTime, plLoopGain,
        plVelFFwd, plAccFFwd, plPosErrLim):
    return _thorlabs_apt.MOT_GetDCPositionLoopParams(
        lSerialNum, plProp, plInt, plIntLim, plDeriv, plDerivTime, plLoopGain,
        plVelFFwd, plAccFFwd, plPosErrLim)


def MOT_SetDCMotorOutputParams(
        lSerialNum, fContCurrLim, fEnergyLim, fMotorLim, fMotorBias):
    return _thorlabs_apt.MOT_SetDCMotorOutputParams(
        lSerialNum, fContCurrLim, fEnergyLim, fMotorLim, fMotorBias)


def MOT_GetDCMotorOutputParams(
        lSerialNum, pfContCurrLim, pfEnergyLim, pfMotorLim, pfMotorBias):
    return _thorlabs_apt.MOT_GetDCMotorOutputParams(
        lSerialNum, pfContCurrLim, pfEnergyLim, pfMotorLim, pfMotorBias)


def MOT_SetDCTrackSettleParams(lSerialNum, lSettleTime, lSettleWnd, lTrackWnd):
    return _thorlabs_apt.MOT_SetDCTrackSettleParams(
        lSerialNum, lSettleTime, lSettleWnd, lTrackWnd)


def MOT_GetDCTrackSettleParams(
        lSerialNum, plSettleTime, plSettleWnd, plTrackWnd):
    return _thorlabs_apt.MOT_GetDCTrackSettleParams(
        lSerialNum, plSettleTime, plSettleWnd, plTrackWnd)


def MOT_SetDCProfileModeParams(lSerialNum, lProfMode, fJerk):
    return _thorlabs_apt.MOT_SetDCProfileModeParams(
        lSerialNum, lProfMode, fJerk)


def MOT_GetDCProfileModeParams(lSerialNum, plProfMode, pfJerk):
    return _thorlabs_apt.MOT_GetDCProfileModeParams(
        lSerialNum, plProfMode, pfJerk)


def MOT_SetDCJoystickParams(
        lSerialNum, fMaxVelLO, fMaxVelHI, fAccnLO, fAccnHI, lDirSense):
    return _thorlabs_apt.MOT_SetDCJoystickParams(
        lSerialNum, fMaxVelLO, fMaxVelHI, fAccnLO, fAccnHI, lDirSense)


def MOT_GetDCJoystickParams(
        lSerialNum, pfMaxVelLO, pfMaxVelHI, pfAccnLO, pfAccnHI, plDirSense):
    return _thorlabs_apt.MOT_GetDCJoystickParams(
        lSerialNum, pfMaxVelLO, pfMaxVelHI, pfAccnLO, pfAccnHI, plDirSense)


def MOT_SetDCSettledCurrentLoopParams(
        lSerialNum, lSettledProp, lSettledInt, lSettledIntLim,
        lSettledIntDeadBand, lSettledFFwd):
    return _thorlabs_apt.MOT_SetDCSettledCurrentLoopParams(
        lSerialNum, lSettledProp, lSettledInt, lSettledIntLim,
        lSettledIntDeadBand, lSettledFFwd)


def MOT_GetDCSettledCurrentLoopParams(
        lSerialNum, plSettledProp, plSettledInt, plSettledIntLim,
        plSettledIntDeadBand, plSettledFFwd):
    return _thorlabs_apt.MOT_GetDCSettledCurrentLoopParams(
        lSerialNum, plSettledProp, plSettledInt, plSettledIntLim,
        plSettledIntDeadBand, plSettledFFwd)


def MOT_SetBowIndex(lSerialNum, lBowIndex):
    return _thorlabs_apt.MOT_SetBowIndex(lSerialNum, lBowIndex)


def MOT_GetBowIndex(lSerialNum, plBowIndex):
    return _thorlabs_apt.MOT_GetBowIndex(lSerialNum, plBowIndex)


def MOT_SetDCTriggerParams(lSerialNum, lTrigInMode, lTrigOutMode):
    return _thorlabs_apt.MOT_SetDCTriggerParams(
        lSerialNum, lTrigInMode, lTrigOutMode)


def MOT_GetDCTriggerParams(lSerialNum, plTrigInMode, plTrigOutMode):
    return _thorlabs_apt.MOT_GetDCTriggerParams(
        lSerialNum, plTrigInMode, plTrigOutMode)


def MOT_SetKCubePanelParams(
        lSerialNum, lWheelMode, fWheelVel, fWheelAccn, lWheelDirSense,
        fPresetPos1, fPresetPos2, lDispBrightness):
    return _thorlabs_apt.MOT_SetKCubePanelParams(
        lSerialNum, lWheelMode, fWheelVel, fWheelAccn, lWheelDirSense,
        fPresetPos1, fPresetPos2, lDispBrightness)


def MOT_GetKCubePanelParams(
        lSerialNum, plWheelMode, pfWheelVel, pfWheelAccn, plWheelDirSense,
        pfPresetPos1, pfPresetPos2, plDispBrightness):
    return _thorlabs_apt.MOT_GetKCubePanelParams(
        lSerialNum, plWheelMode, pfWheelVel, pfWheelAccn, plWheelDirSense,
        pfPresetPos1, pfPresetPos2, plDispBrightness)


def MOT_SetKCubeTriggerParams(
        lSerialNum, lTrig1Mode, lTrig1Polarity, lTrig2Mode, lTrig2Polarity):
    return _thorlabs_apt.MOT_SetKCubeTriggerParams(
        lSerialNum, lTrig1Mode, lTrig1Polarity, lTrig2Mode, lTrig2Polarity)


def MOT_GetKCubeTriggerParams(
        lSerialNum, plTrig1Mode, plTrig1Polarity, plTrig2Mode, plTrig2Polarity):
    return _thorlabs_apt.MOT_GetKCubeTriggerParams(
        lSerialNum, plTrig1Mode, plTrig1Polarity, plTrig2Mode, plTrig2Polarity)


def MOT_SetKCubePosTriggerParams(
        lSerialNum, fStartPosFwd, fPosIntervalFwd, lNumPulsesFwd, fStartPosRev,
        fPosIntervalRev, lNumPulsesRev, fPulseWidth, lNumCycles):
    return _thorlabs_apt.MOT_SetKCubePosTriggerParams(
        lSerialNum, fStartPosFwd, fPosIntervalFwd, lNumPulsesFwd, fStartPosRev,
        fPosIntervalRev, lNumPulsesRev, fPulseWidth, lNumCycles)


def MOT_GetKCubePosTriggerParams(
        lSerialNum, pfStartPosFwd, pfPosIntervalFwd, plNumPulsesFwd,
        pfStartPosRev, pfPosIntervalRev, plNumPulsesRev, pfPulseWidth,
        plNumCycles):
    return _thorlabs_apt.MOT_GetKCubePosTriggerParams(
        lSerialNum, pfStartPosFwd, pfPosIntervalFwd, plNumPulsesFwd,
        pfStartPosRev, pfPosIntervalRev, plNumPulsesRev, pfPulseWidth,
        plNumCycles)


def MOT_SetKCubeKSTLoopParams(lSerialNum, lLoopMode, lProp, lInt, lDiff,
                              lPIDClip, lPIDTol, lEncConst):
    return _thorlabs_apt.MOT_SetKCubeKSTLoopParams(
        lSerialNum, lLoopMode, lProp, lInt, lDiff, lPIDClip, lPIDTol, lEncConst)


def MOT_GetKCubeKSTLoopParams(
        lSerialNum, plLoopMode, plProp, plInt, plDiff, plPIDClip, lPIDTol,
        plEncConst):
    return _thorlabs_apt.MOT_GetKCubeKSTLoopParams(
        lSerialNum, plLoopMode, plProp, plInt, plDiff, plPIDClip, lPIDTol,
        plEncConst)


def MOT_GetInMotion(lSerialNum, pbInMotionFlag):
    return _thorlabs_apt.MOT_GetInMotion(lSerialNum, pbInMotionFlag)


def MFF_Identify(lSerialNum):
    return _thorlabs_apt.MFF_Identify(lSerialNum)


def MFF_EnableHWChannel(lSerialNum):
    return _thorlabs_apt.MFF_EnableHWChannel(lSerialNum)


def MFF_DisableHWChannel(lSerialNum):
    return _thorlabs_apt.MFF_DisableHWChannel(lSerialNum)


def MFF_MoveJog(lSerialNum, lJogDir):
    return _thorlabs_apt.MFF_MoveJog(lSerialNum, lJogDir)


def MFF_SetMFFOperParams(
        lSerialNum, lTransitTime, lDigIO1OperMode, lDigIO1SigMode,
        lDigIO1PulseWidth, lDigIO2OperMode, lDigIO2SigMode, lDigIO2PulseWidth):
    return _thorlabs_apt.MFF_SetMFFOperParams(
        lSerialNum, lTransitTime, lDigIO1OperMode, lDigIO1SigMode,
        lDigIO1PulseWidth, lDigIO2OperMode, lDigIO2SigMode, lDigIO2PulseWidth)


def MFF_GetMFFOperParams(
        lSerialNum, plTransitTime, plDigIO1OperMode, plDigIO1SigMode,
        plDigIO1PulseWidth, plDigIO2OperMode, plDigIO2SigMode,
        plDigIO2PulseWidth):
    return _thorlabs_apt.MFF_GetMFFOperParams(
        lSerialNum, plTransitTime, plDigIO1OperMode, plDigIO1SigMode,
        plDigIO1PulseWidth, plDigIO2OperMode, plDigIO2SigMode,
        plDigIO2PulseWidth)


def MFF_GetStatusBits(lSerialNum, plStatusBits):
    return _thorlabs_apt.MFF_GetStatusBits(lSerialNum, plStatusBits)


def SC_Identify(lSerialNum):
    return _thorlabs_apt.SC_Identify(lSerialNum)


def SC_SetOperatingMode(lSerialNum, lMode):
    return _thorlabs_apt.SC_SetOperatingMode(lSerialNum, lMode)


def SC_GetOperatingMode(lSerialNum, plMode):
    return _thorlabs_apt.SC_GetOperatingMode(lSerialNum, plMode)


def SC_SetCycleParams(lSerialNum, fOnTime, fOffTime, lNumCycles):
    return _thorlabs_apt.SC_SetCycleParams(
        lSerialNum, fOnTime, fOffTime, lNumCycles)


def SC_GetCycleParams(lSerialNum, pfOnTime, pfOffTime, plNumCycles):
    return _thorlabs_apt.SC_GetCycleParams(
        lSerialNum, pfOnTime, pfOffTime, plNumCycles)


def SC_Enable(lSerialNum):
    return _thorlabs_apt.SC_Enable(lSerialNum)


def SC_Disable(lSerialNum):
    return _thorlabs_apt.SC_Disable(lSerialNum)


def SC_GetOPState(lSerialNum, plState):
    return _thorlabs_apt.SC_GetOPState(lSerialNum, plState)


def SC_GetStatusBits(lSerialNum, plStatusBits):
    return _thorlabs_apt.SC_GetStatusBits(lSerialNum, plStatusBits)


def PZMOT_ConnectMoveCompleteCallback(lSerialNum, pFnMoveCallback):
    return _thorlabs_apt.PZMOT_ConnectMoveCompleteCallback(
        lSerialNum, pFnMoveCallback)


def PZMOT_DisconnectMoveCompleteCallback(lSerialNum, pFnMoveCallback):
    return _thorlabs_apt.PZMOT_DisconnectMoveCompleteCallback(
        lSerialNum, pFnMoveCallback)


def PZMOT_LLSetGetDigOPs(lSerialNum, bSet, plBits):
    return _thorlabs_apt.PZMOT_LLSetGetDigOPs(lSerialNum, bSet, plBits)


def PZMOT_SetChannel(lSerialNum, lChanID):
    return _thorlabs_apt.PZMOT_SetChannel(lSerialNum, lChanID)


def PZMOT_Identify(lSerialNum):
    return _thorlabs_apt.PZMOT_Identify(lSerialNum)


def PZMOT_EnableHWChannel(lSerialNum):
    return _thorlabs_apt.PZMOT_EnableHWChannel(lSerialNum)


def PZMOT_SetDriveOPParams(lSerialNum, lVoltage, lStepRate, lStepAccn):
    return _thorlabs_apt.PZMOT_SetDriveOPParams(
        lSerialNum, lVoltage, lStepRate, lStepAccn)


def PZMOT_GetDriveOPParams(lSerialNum, plVoltage, plStepRate, plStepAccn):
    return _thorlabs_apt.PZMOT_GetDriveOPParams(
        lSerialNum, plVoltage, plStepRate, plStepAccn)


def PZMOT_SetJogMode(lSerialNum, lMode):
    return _thorlabs_apt.PZMOT_SetJogMode(lSerialNum, lMode)


def PZMOT_GetJogMode(lSerialNum, plMode):
    return _thorlabs_apt.PZMOT_GetJogMode(lSerialNum, plMode)


def PZMOT_SetJogStepSize(lSerialNum, lJogSteps):
    return _thorlabs_apt.PZMOT_SetJogStepSize(lSerialNum, lJogSteps)


def PZMOT_GetJogStepSize(lSerialNum, plJogSteps):
    return _thorlabs_apt.PZMOT_GetJogStepSize(lSerialNum, plJogSteps)


def PZMOT_SetJogOPParams(lSerialNum, lStepRate, lStepAccn):
    return _thorlabs_apt.PZMOT_SetJogOPParams(lSerialNum, lStepRate, lStepAccn)


def PZMOT_GetJogOPParams(lSerialNum, plStepRate, plStepAccn):
    return _thorlabs_apt.PZMOT_GetJogOPParams(
        lSerialNum, plStepRate, plStepAccn)


def PZMOT_SetPositionSteps(lSerialNum, lPosSteps):
    return _thorlabs_apt.PZMOT_SetPositionSteps(lSerialNum, lPosSteps)


def PZMOT_GetPositionSteps(lSerialNum, plPosSteps):
    return _thorlabs_apt.PZMOT_GetPositionSteps(lSerialNum, plPosSteps)


def PZMOT_SetButtonParams(lSerialNum, lButMode, lButPos1, lButPos2):
    return _thorlabs_apt.PZMOT_SetButtonParams(
        lSerialNum, lButMode, lButPos1, lButPos2)


def PZMOT_GetButtonParams(lSerialNum, plButMode, plButPos1, plButPos2):
    return _thorlabs_apt.PZMOT_GetButtonParams(
        lSerialNum, plButMode, plButPos1, plButPos2)


def PZMOT_SetPotParams(lSerialNum, lMaxStepRate):
    return _thorlabs_apt.PZMOT_SetPotParams(lSerialNum, lMaxStepRate)


def PZMOT_GetPotParams(lSerialNum, plMaxStepRate):
    return _thorlabs_apt.PZMOT_GetPotParams(lSerialNum, plMaxStepRate)


def PZMOT_SetKCubePanelParams(
        lSerialNum, lJSMode, lJSMaxStepRate, lJSDirSense, lPresetPos1,
        lPresetPos2, lDispBrightness):
    return _thorlabs_apt.PZMOT_SetKCubePanelParams(
        lSerialNum, lJSMode, lJSMaxStepRate, lJSDirSense, lPresetPos1,
        lPresetPos2, lDispBrightness)


def PZMOT_GetKCubePanelParams(
        lSerialNum, plJSMode, plJSMaxStepRate, plJSDirSense, plPresetPos1,
        plPresetPos2, plDispBrightness):
    return _thorlabs_apt.PZMOT_GetKCubePanelParams(
        lSerialNum, plJSMode, plJSMaxStepRate, plJSDirSense, plPresetPos1,
        plPresetPos2, plDispBrightness)


def PZMOT_SetKCubeTriggerParams(
        lSerialNum, lTrigChan1, lTrigChan2, lTrig1Mode, lTrig1Polarity,
        lTrig2Mode, lTrig2Polarity):
    return _thorlabs_apt.PZMOT_SetKCubeTriggerParams(
        lSerialNum, lTrigChan1, lTrigChan2, lTrig1Mode, lTrig1Polarity,
        lTrig2Mode, lTrig2Polarity)


def PZMOT_GetKCubeTriggerParams(
        lSerialNum, plTrigChan1, plTrigChan2, plTrig1Mode, plTrig1Polarity,
        plTrig2Mode, plTrig2Polarity):
    return _thorlabs_apt.PZMOT_GetKCubeTriggerParams(
        lSerialNum, plTrigChan1, plTrigChan2, plTrig1Mode, plTrig1Polarity,
        plTrig2Mode, plTrig2Polarity)


def PZMOT_SetKCubePosTriggerParams(
        lSerialNum, lStartPosFwd, lPosIntervalFwd, lNumPulsesFwd, lStartPosRev,
        lPosIntervalRev, lNumPulsesRev, lPulseWidth, lNumCycles):
    return _thorlabs_apt.PZMOT_SetKCubePosTriggerParams(
        lSerialNum, lStartPosFwd, lPosIntervalFwd, lNumPulsesFwd, lStartPosRev,
        lPosIntervalRev, lNumPulsesRev, lPulseWidth, lNumCycles)


def PZMOT_GetKCubePosTriggerParams(
        lSerialNum, plStartPosFwd, plPosIntervalFwd, plNumPulsesFwd,
        plStartPosRev, plPosIntervalRev, plNumPulsesRev, plPulseWidth,
        plNumCycles):
    return _thorlabs_apt.PZMOT_GetKCubePosTriggerParams(
        lSerialNum, plStartPosFwd, plPosIntervalFwd, plNumPulsesFwd,
        plStartPosRev, plPosIntervalRev, plNumPulsesRev, plPulseWidth,
        plNumCycles)


def PZMOT_SetKCubeChanEnableMode(lSerialNum, lMode):
    return _thorlabs_apt.PZMOT_SetKCubeChanEnableMode(lSerialNum, lMode)


def PZMOT_GetKCubeChanEnableMode(lSerialNum, plMode):
    return _thorlabs_apt.PZMOT_GetKCubeChanEnableMode(lSerialNum, plMode)


def PZMOT_SetKCubeJogParams(
        lSerialNum, lJogMode, lJogStepSizeFwd, lJogStepSizeRev, lJogStepRate,
        lJogStepAccn):
    return _thorlabs_apt.PZMOT_SetKCubeJogParams(
        lSerialNum, lJogMode, lJogStepSizeFwd, lJogStepSizeRev, lJogStepRate,
        lJogStepAccn)


def PZMOT_GetKCubeJogParams(
    lSerialNum, plJogMode, plJogStepSizeFwd, plJogStepSizeRev,
        plJogStepRate, plJogStepAccn):
    return _thorlabs_apt.PZMOT_GetKCubeJogParams(
        lSerialNum, plJogMode, plJogStepSizeFwd, plJogStepSizeRev,
        plJogStepRate, plJogStepAccn)


def PZMOT_SetKCubeFeedbackSig(lSerialNum, lFBMode, lEncoderConst):
    return _thorlabs_apt.PZMOT_SetKCubeFeedbackSig(
        lSerialNum, lFBMode, lEncoderConst)


def PZMOT_GetKCubeFeedbackSig(lSerialNum, plFBMode, plEncoderConst):
    return _thorlabs_apt.PZMOT_GetKCubeFeedbackSig(
        lSerialNum, plFBMode, plEncoderConst)


def PZMOT_GetStatusBits(lSerialNum, plStatusBits):
    return _thorlabs_apt.PZMOT_GetStatusBits(lSerialNum, plStatusBits)


def PZMOT_MoveRelativeStepsEx(lSerialNum, lRelSteps, bWait):
    return _thorlabs_apt.PZMOT_MoveRelativeStepsEx(lSerialNum, lRelSteps, bWait)


def PZMOT_MoveAbsoluteStepsEx(lSerialNum, lAbsSteps, bWait):
    return _thorlabs_apt.PZMOT_MoveAbsoluteStepsEx(lSerialNum, lAbsSteps, bWait)


def PZMOT_MoveVelocity(lSerialNum, lDirection):
    return _thorlabs_apt.PZMOT_MoveVelocity(lSerialNum, lDirection)


def PZMOT_Stop(lSerialNum):
    return _thorlabs_apt.PZMOT_Stop(lSerialNum)


def PZMOT_MoveJog(lSerialNum, lJogDir):
    return _thorlabs_apt.PZMOT_MoveJog(lSerialNum, lJogDir)


def PZMOT_GetInMotion(lSerialNum, pbInMotionFlag):
    return _thorlabs_apt.PZMOT_GetInMotion(lSerialNum, pbInMotionFlag)

if __name__ == '__main__':
    APTInit()
    GetNumHWUnitsEx(0, plNumUnits)
    print(plNumUnits.value)
    APTCleanUp()