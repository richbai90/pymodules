# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _brushless_motor
else:
    import _brushless_motor

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


MOT_TravelModeUndefined = _brushless_motor.MOT_TravelModeUndefined
MOT_Linear = _brushless_motor.MOT_Linear
MOT_Rotational = _brushless_motor.MOT_Rotational
MOT_TravelDirectionDisabled = _brushless_motor.MOT_TravelDirectionDisabled
MOT_Forwards = _brushless_motor.MOT_Forwards
MOT_Reverse = _brushless_motor.MOT_Reverse
MOT_Normal = _brushless_motor.MOT_Normal
MOT_Backwards = _brushless_motor.MOT_Backwards
MOT_LimitSwitchDirectionUndefined = _brushless_motor.MOT_LimitSwitchDirectionUndefined
MOT_ReverseLimitSwitch = _brushless_motor.MOT_ReverseLimitSwitch
MOT_ForwardLimitSwitch = _brushless_motor.MOT_ForwardLimitSwitch
MOT_JogModeUndefined = _brushless_motor.MOT_JogModeUndefined
MOT_Continuous = _brushless_motor.MOT_Continuous
MOT_SingleStep = _brushless_motor.MOT_SingleStep
MOT_StopModeUndefined = _brushless_motor.MOT_StopModeUndefined
MOT_Immediate = _brushless_motor.MOT_Immediate
MOT_Profiled = _brushless_motor.MOT_Profiled
MOT_ButtonModeUndefined = _brushless_motor.MOT_ButtonModeUndefined
MOT_JogMode = _brushless_motor.MOT_JogMode
MOT_Preset = _brushless_motor.MOT_Preset
MOT_Trapezoidal = _brushless_motor.MOT_Trapezoidal
MOT_SCurve = _brushless_motor.MOT_SCurve
MOT_LimitSwitchModeUndefined = _brushless_motor.MOT_LimitSwitchModeUndefined
MOT_LimitSwitchIgnoreSwitch = _brushless_motor.MOT_LimitSwitchIgnoreSwitch
MOT_LimitSwitchMakeOnContact = _brushless_motor.MOT_LimitSwitchMakeOnContact
MOT_LimitSwitchBreakOnContact = _brushless_motor.MOT_LimitSwitchBreakOnContact
MOT_LimitSwitchMakeOnHome = _brushless_motor.MOT_LimitSwitchMakeOnHome
MOT_LimitSwitchBreakOnHome = _brushless_motor.MOT_LimitSwitchBreakOnHome
MOT_PMD_Reserved = _brushless_motor.MOT_PMD_Reserved
MOT_LimitSwitchIgnoreSwitchSwapped = _brushless_motor.MOT_LimitSwitchIgnoreSwitchSwapped
MOT_LimitSwitchMakeOnContactSwapped = _brushless_motor.MOT_LimitSwitchMakeOnContactSwapped
MOT_LimitSwitchBreakOnContactSwapped = _brushless_motor.MOT_LimitSwitchBreakOnContactSwapped
MOT_LimitSwitchMakeOnHomeSwapped = _brushless_motor.MOT_LimitSwitchMakeOnHomeSwapped
MOT_LimitSwitchBreakOnHomeSwapped = _brushless_motor.MOT_LimitSwitchBreakOnHomeSwapped
MOT_LimitSwitchSWModeUndefined = _brushless_motor.MOT_LimitSwitchSWModeUndefined
MOT_LimitSwitchIgnored = _brushless_motor.MOT_LimitSwitchIgnored
MOT_LimitSwitchStopImmediate = _brushless_motor.MOT_LimitSwitchStopImmediate
MOT_LimitSwitchStopProfiled = _brushless_motor.MOT_LimitSwitchStopProfiled
MOT_LimitSwitchIgnored_Rotational = _brushless_motor.MOT_LimitSwitchIgnored_Rotational
MOT_LimitSwitchStopImmediate_Rotational = _brushless_motor.MOT_LimitSwitchStopImmediate_Rotational
MOT_LimitSwitchStopProfiled_Rotational = _brushless_motor.MOT_LimitSwitchStopProfiled_Rotational
DisallowIllegalMoves = _brushless_motor.DisallowIllegalMoves
AllowPartialMoves = _brushless_motor.AllowPartialMoves
AllowAllMoves = _brushless_motor.AllowAllMoves
MOT_PhaseA = _brushless_motor.MOT_PhaseA
MOT_PhaseB = _brushless_motor.MOT_PhaseB
MOT_PhaseAB = _brushless_motor.MOT_PhaseAB
LinearRange = _brushless_motor.LinearRange
RotationalUnlimited = _brushless_motor.RotationalUnlimited
RotationalWrapping = _brushless_motor.RotationalWrapping
Quickest = _brushless_motor.Quickest
Forwards = _brushless_motor.Forwards
Reverse = _brushless_motor.Reverse
MOT_TrigIn_Disabled = _brushless_motor.MOT_TrigIn_Disabled
MOT_TrigIn_GPI = _brushless_motor.MOT_TrigIn_GPI
MOT_TrigIn_RelativeMove = _brushless_motor.MOT_TrigIn_RelativeMove
MOT_TrigIn_AbsoluteMove = _brushless_motor.MOT_TrigIn_AbsoluteMove
MOT_TrigIn_Home = _brushless_motor.MOT_TrigIn_Home
MOT_TrigIn_Stop = _brushless_motor.MOT_TrigIn_Stop
MOT_TrigPolarityHigh = _brushless_motor.MOT_TrigPolarityHigh
MOT_TrigPolarityLow = _brushless_motor.MOT_TrigPolarityLow
MOT_TrigSoftware = _brushless_motor.MOT_TrigSoftware
MOT_TrigPort1 = _brushless_motor.MOT_TrigPort1
MOT_TrigPort2 = _brushless_motor.MOT_TrigPort2
MOT_TrigPort3 = _brushless_motor.MOT_TrigPort3
MOT_TrigOut_Disabled = _brushless_motor.MOT_TrigOut_Disabled
MOT_TrigOut_GPO = _brushless_motor.MOT_TrigOut_GPO
MOT_TrigOut_InMotion = _brushless_motor.MOT_TrigOut_InMotion
MOT_TrigOut_AtMaxVelocity = _brushless_motor.MOT_TrigOut_AtMaxVelocity
MOT_TrigOut_AtPositionStepFwd = _brushless_motor.MOT_TrigOut_AtPositionStepFwd
MOT_TrigOut_AtPositionStepRev = _brushless_motor.MOT_TrigOut_AtPositionStepRev
MOT_TrigOut_AtPositionStepBoth = _brushless_motor.MOT_TrigOut_AtPositionStepBoth
MOT_TrigOut_AtFwdLimit = _brushless_motor.MOT_TrigOut_AtFwdLimit
MOT_TrigOut_AtBwdLimit = _brushless_motor.MOT_TrigOut_AtBwdLimit
MOT_TrigOut_AtLimit = _brushless_motor.MOT_TrigOut_AtLimit
MOD_AUXIOPORTMODE_SW = _brushless_motor.MOD_AUXIOPORTMODE_SW
MOD_AUXIOPORTMODE_ENC = _brushless_motor.MOD_AUXIOPORTMODE_ENC
MOD_IOPORTMODE_DIGIN = _brushless_motor.MOD_IOPORTMODE_DIGIN
MOD_IOPORTMODE_DIGOUT = _brushless_motor.MOD_IOPORTMODE_DIGOUT
MOD_IOPORTMODE_ANALOGOUT = _brushless_motor.MOD_IOPORTMODE_ANALOGOUT
MOD_IOPORTSOURCE_SOFTWARE = _brushless_motor.MOD_IOPORTSOURCE_SOFTWARE
MOD_IOPORTSOURCE_CHAN1 = _brushless_motor.MOD_IOPORTSOURCE_CHAN1
MOD_IOPORTSOURCE_CHAN2 = _brushless_motor.MOD_IOPORTSOURCE_CHAN2
MOD_IOPORTSOURCE_CHAN3 = _brushless_motor.MOD_IOPORTSOURCE_CHAN3
MOD_MONITORVAR_POSERROR = _brushless_motor.MOD_MONITORVAR_POSERROR
MOD_MONITORVAR_POSITION = _brushless_motor.MOD_MONITORVAR_POSITION
MOD_MONITORVAR_IPHASEA = _brushless_motor.MOD_MONITORVAR_IPHASEA
MOD_MONITORVAR_IPHASEB = _brushless_motor.MOD_MONITORVAR_IPHASEB
MOD_MONITORVAR_IPHASEC = _brushless_motor.MOD_MONITORVAR_IPHASEC
MOD_MONITORVAR_IMOT = _brushless_motor.MOD_MONITORVAR_IMOT
MOT_Trigger_Arm = _brushless_motor.MOT_Trigger_Arm
MOT_Trigger_Cancel = _brushless_motor.MOT_Trigger_Cancel
class MOT_VelocityParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    minVelocity = property(_brushless_motor.MOT_VelocityParameters_minVelocity_get, _brushless_motor.MOT_VelocityParameters_minVelocity_set)
    acceleration = property(_brushless_motor.MOT_VelocityParameters_acceleration_get, _brushless_motor.MOT_VelocityParameters_acceleration_set)
    maxVelocity = property(_brushless_motor.MOT_VelocityParameters_maxVelocity_get, _brushless_motor.MOT_VelocityParameters_maxVelocity_set)

    def __init__(self):
        _brushless_motor.MOT_VelocityParameters_swiginit(self, _brushless_motor.new_MOT_VelocityParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_VelocityParameters

# Register MOT_VelocityParameters in _brushless_motor:
_brushless_motor.MOT_VelocityParameters_swigregister(MOT_VelocityParameters)
class MOT_JogParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mode = property(_brushless_motor.MOT_JogParameters_mode_get, _brushless_motor.MOT_JogParameters_mode_set)
    stepSize = property(_brushless_motor.MOT_JogParameters_stepSize_get, _brushless_motor.MOT_JogParameters_stepSize_set)
    velParams = property(_brushless_motor.MOT_JogParameters_velParams_get, _brushless_motor.MOT_JogParameters_velParams_set)
    stopMode = property(_brushless_motor.MOT_JogParameters_stopMode_get, _brushless_motor.MOT_JogParameters_stopMode_set)

    def __init__(self):
        _brushless_motor.MOT_JogParameters_swiginit(self, _brushless_motor.new_MOT_JogParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_JogParameters

# Register MOT_JogParameters in _brushless_motor:
_brushless_motor.MOT_JogParameters_swigregister(MOT_JogParameters)
class MOT_HomingParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    direction = property(_brushless_motor.MOT_HomingParameters_direction_get, _brushless_motor.MOT_HomingParameters_direction_set)
    limitSwitch = property(_brushless_motor.MOT_HomingParameters_limitSwitch_get, _brushless_motor.MOT_HomingParameters_limitSwitch_set)
    velocity = property(_brushless_motor.MOT_HomingParameters_velocity_get, _brushless_motor.MOT_HomingParameters_velocity_set)
    offsetDistance = property(_brushless_motor.MOT_HomingParameters_offsetDistance_get, _brushless_motor.MOT_HomingParameters_offsetDistance_set)

    def __init__(self):
        _brushless_motor.MOT_HomingParameters_swiginit(self, _brushless_motor.new_MOT_HomingParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_HomingParameters

# Register MOT_HomingParameters in _brushless_motor:
_brushless_motor.MOT_HomingParameters_swigregister(MOT_HomingParameters)
class MOT_VelocityProfileParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mode = property(_brushless_motor.MOT_VelocityProfileParameters_mode_get, _brushless_motor.MOT_VelocityProfileParameters_mode_set)
    jerk = property(_brushless_motor.MOT_VelocityProfileParameters_jerk_get, _brushless_motor.MOT_VelocityProfileParameters_jerk_set)
    notUsed = property(_brushless_motor.MOT_VelocityProfileParameters_notUsed_get, _brushless_motor.MOT_VelocityProfileParameters_notUsed_set)
    lastNotUsed = property(_brushless_motor.MOT_VelocityProfileParameters_lastNotUsed_get, _brushless_motor.MOT_VelocityProfileParameters_lastNotUsed_set)

    def __init__(self):
        _brushless_motor.MOT_VelocityProfileParameters_swiginit(self, _brushless_motor.new_MOT_VelocityProfileParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_VelocityProfileParameters

# Register MOT_VelocityProfileParameters in _brushless_motor:
_brushless_motor.MOT_VelocityProfileParameters_swigregister(MOT_VelocityProfileParameters)
class MOT_StageAxisParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    stageID = property(_brushless_motor.MOT_StageAxisParameters_stageID_get, _brushless_motor.MOT_StageAxisParameters_stageID_set)
    axisID = property(_brushless_motor.MOT_StageAxisParameters_axisID_get, _brushless_motor.MOT_StageAxisParameters_axisID_set)
    partNumber = property(_brushless_motor.MOT_StageAxisParameters_partNumber_get, _brushless_motor.MOT_StageAxisParameters_partNumber_set)
    serialNumber = property(_brushless_motor.MOT_StageAxisParameters_serialNumber_get, _brushless_motor.MOT_StageAxisParameters_serialNumber_set)
    countsPerUnit = property(_brushless_motor.MOT_StageAxisParameters_countsPerUnit_get, _brushless_motor.MOT_StageAxisParameters_countsPerUnit_set)
    minPosition = property(_brushless_motor.MOT_StageAxisParameters_minPosition_get, _brushless_motor.MOT_StageAxisParameters_minPosition_set)
    maxPosition = property(_brushless_motor.MOT_StageAxisParameters_maxPosition_get, _brushless_motor.MOT_StageAxisParameters_maxPosition_set)
    maxAcceleration = property(_brushless_motor.MOT_StageAxisParameters_maxAcceleration_get, _brushless_motor.MOT_StageAxisParameters_maxAcceleration_set)
    maxDecceleration = property(_brushless_motor.MOT_StageAxisParameters_maxDecceleration_get, _brushless_motor.MOT_StageAxisParameters_maxDecceleration_set)
    maxVelocity = property(_brushless_motor.MOT_StageAxisParameters_maxVelocity_get, _brushless_motor.MOT_StageAxisParameters_maxVelocity_set)
    reserved1 = property(_brushless_motor.MOT_StageAxisParameters_reserved1_get, _brushless_motor.MOT_StageAxisParameters_reserved1_set)
    reserved2 = property(_brushless_motor.MOT_StageAxisParameters_reserved2_get, _brushless_motor.MOT_StageAxisParameters_reserved2_set)
    reserved3 = property(_brushless_motor.MOT_StageAxisParameters_reserved3_get, _brushless_motor.MOT_StageAxisParameters_reserved3_set)
    reserved4 = property(_brushless_motor.MOT_StageAxisParameters_reserved4_get, _brushless_motor.MOT_StageAxisParameters_reserved4_set)
    reserved5 = property(_brushless_motor.MOT_StageAxisParameters_reserved5_get, _brushless_motor.MOT_StageAxisParameters_reserved5_set)
    reserved6 = property(_brushless_motor.MOT_StageAxisParameters_reserved6_get, _brushless_motor.MOT_StageAxisParameters_reserved6_set)
    reserved7 = property(_brushless_motor.MOT_StageAxisParameters_reserved7_get, _brushless_motor.MOT_StageAxisParameters_reserved7_set)
    reserved8 = property(_brushless_motor.MOT_StageAxisParameters_reserved8_get, _brushless_motor.MOT_StageAxisParameters_reserved8_set)

    def __init__(self):
        _brushless_motor.MOT_StageAxisParameters_swiginit(self, _brushless_motor.new_MOT_StageAxisParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_StageAxisParameters

# Register MOT_StageAxisParameters in _brushless_motor:
_brushless_motor.MOT_StageAxisParameters_swigregister(MOT_StageAxisParameters)
class MOT_JoystickParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    lowGearMaxVelocity = property(_brushless_motor.MOT_JoystickParameters_lowGearMaxVelocity_get, _brushless_motor.MOT_JoystickParameters_lowGearMaxVelocity_set)
    highGearMaxVelocity = property(_brushless_motor.MOT_JoystickParameters_highGearMaxVelocity_get, _brushless_motor.MOT_JoystickParameters_highGearMaxVelocity_set)
    lowGearAcceleration = property(_brushless_motor.MOT_JoystickParameters_lowGearAcceleration_get, _brushless_motor.MOT_JoystickParameters_lowGearAcceleration_set)
    highGearAcceleration = property(_brushless_motor.MOT_JoystickParameters_highGearAcceleration_get, _brushless_motor.MOT_JoystickParameters_highGearAcceleration_set)
    directionSense = property(_brushless_motor.MOT_JoystickParameters_directionSense_get, _brushless_motor.MOT_JoystickParameters_directionSense_set)

    def __init__(self):
        _brushless_motor.MOT_JoystickParameters_swiginit(self, _brushless_motor.new_MOT_JoystickParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_JoystickParameters

# Register MOT_JoystickParameters in _brushless_motor:
_brushless_motor.MOT_JoystickParameters_swigregister(MOT_JoystickParameters)
class MOT_BrushlessPositionLoopParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    proportionalGain = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_proportionalGain_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_proportionalGain_set)
    integralGain = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_integralGain_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_integralGain_set)
    integralLimit = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_integralLimit_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_integralLimit_set)
    differentialGain = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_differentialGain_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_differentialGain_set)
    derivativeRecalculationTime = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_derivativeRecalculationTime_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_derivativeRecalculationTime_set)
    factorForOutput = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_factorForOutput_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_factorForOutput_set)
    velocityFeedForward = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_velocityFeedForward_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_velocityFeedForward_set)
    accelerationFeedForward = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_accelerationFeedForward_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_accelerationFeedForward_set)
    positionErrorLimit = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_positionErrorLimit_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_positionErrorLimit_set)
    notUsed = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_notUsed_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_notUsed_set)
    lastNotUsed = property(_brushless_motor.MOT_BrushlessPositionLoopParameters_lastNotUsed_get, _brushless_motor.MOT_BrushlessPositionLoopParameters_lastNotUsed_set)

    def __init__(self):
        _brushless_motor.MOT_BrushlessPositionLoopParameters_swiginit(self, _brushless_motor.new_MOT_BrushlessPositionLoopParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_BrushlessPositionLoopParameters

# Register MOT_BrushlessPositionLoopParameters in _brushless_motor:
_brushless_motor.MOT_BrushlessPositionLoopParameters_swigregister(MOT_BrushlessPositionLoopParameters)
class MOT_BrushlessTrackSettleParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    time = property(_brushless_motor.MOT_BrushlessTrackSettleParameters_time_get, _brushless_motor.MOT_BrushlessTrackSettleParameters_time_set)
    settledError = property(_brushless_motor.MOT_BrushlessTrackSettleParameters_settledError_get, _brushless_motor.MOT_BrushlessTrackSettleParameters_settledError_set)
    maxTrackingError = property(_brushless_motor.MOT_BrushlessTrackSettleParameters_maxTrackingError_get, _brushless_motor.MOT_BrushlessTrackSettleParameters_maxTrackingError_set)
    notUsed = property(_brushless_motor.MOT_BrushlessTrackSettleParameters_notUsed_get, _brushless_motor.MOT_BrushlessTrackSettleParameters_notUsed_set)
    lastNotUsed = property(_brushless_motor.MOT_BrushlessTrackSettleParameters_lastNotUsed_get, _brushless_motor.MOT_BrushlessTrackSettleParameters_lastNotUsed_set)

    def __init__(self):
        _brushless_motor.MOT_BrushlessTrackSettleParameters_swiginit(self, _brushless_motor.new_MOT_BrushlessTrackSettleParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_BrushlessTrackSettleParameters

# Register MOT_BrushlessTrackSettleParameters in _brushless_motor:
_brushless_motor.MOT_BrushlessTrackSettleParameters_swigregister(MOT_BrushlessTrackSettleParameters)
class MOT_BrushlessCurrentLoopParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    phase = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_phase_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_phase_set)
    proportionalGain = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_proportionalGain_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_proportionalGain_set)
    integralGain = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_integralGain_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_integralGain_set)
    integralLimit = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_integralLimit_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_integralLimit_set)
    deadErrorBand = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_deadErrorBand_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_deadErrorBand_set)
    feedForward = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_feedForward_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_feedForward_set)
    notUsed = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_notUsed_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_notUsed_set)
    lastNotUsed = property(_brushless_motor.MOT_BrushlessCurrentLoopParameters_lastNotUsed_get, _brushless_motor.MOT_BrushlessCurrentLoopParameters_lastNotUsed_set)

    def __init__(self):
        _brushless_motor.MOT_BrushlessCurrentLoopParameters_swiginit(self, _brushless_motor.new_MOT_BrushlessCurrentLoopParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_BrushlessCurrentLoopParameters

# Register MOT_BrushlessCurrentLoopParameters in _brushless_motor:
_brushless_motor.MOT_BrushlessCurrentLoopParameters_swigregister(MOT_BrushlessCurrentLoopParameters)
class MOT_BrushlessElectricOutputParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    continuousCurrentLimit = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_continuousCurrentLimit_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_continuousCurrentLimit_set)
    excessEnergyLimit = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_excessEnergyLimit_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_excessEnergyLimit_set)
    motorSignalLimit = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_motorSignalLimit_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_motorSignalLimit_set)
    motorSignalBias = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_motorSignalBias_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_motorSignalBias_set)
    notUsed = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_notUsed_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_notUsed_set)
    lastNotUsed = property(_brushless_motor.MOT_BrushlessElectricOutputParameters_lastNotUsed_get, _brushless_motor.MOT_BrushlessElectricOutputParameters_lastNotUsed_set)

    def __init__(self):
        _brushless_motor.MOT_BrushlessElectricOutputParameters_swiginit(self, _brushless_motor.new_MOT_BrushlessElectricOutputParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_BrushlessElectricOutputParameters

# Register MOT_BrushlessElectricOutputParameters in _brushless_motor:
_brushless_motor.MOT_BrushlessElectricOutputParameters_swigregister(MOT_BrushlessElectricOutputParameters)
class MOT_LCDParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    JSSensitivity = property(_brushless_motor.MOT_LCDParams_JSSensitivity_get, _brushless_motor.MOT_LCDParams_JSSensitivity_set)
    DisplayIntensity = property(_brushless_motor.MOT_LCDParams_DisplayIntensity_get, _brushless_motor.MOT_LCDParams_DisplayIntensity_set)
    DisplayTimeout = property(_brushless_motor.MOT_LCDParams_DisplayTimeout_get, _brushless_motor.MOT_LCDParams_DisplayTimeout_set)
    DisplayDimIntensity = property(_brushless_motor.MOT_LCDParams_DisplayDimIntensity_get, _brushless_motor.MOT_LCDParams_DisplayDimIntensity_set)
    reserved = property(_brushless_motor.MOT_LCDParams_reserved_get, _brushless_motor.MOT_LCDParams_reserved_set)

    def __init__(self):
        _brushless_motor.MOT_LCDParams_swiginit(self, _brushless_motor.new_MOT_LCDParams())
    __swig_destroy__ = _brushless_motor.delete_MOT_LCDParams

# Register MOT_LCDParams in _brushless_motor:
_brushless_motor.MOT_LCDParams_swigregister(MOT_LCDParams)
class MOT_LCDMoveParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    JogMode = property(_brushless_motor.MOT_LCDMoveParams_JogMode_get, _brushless_motor.MOT_LCDMoveParams_JogMode_set)
    StepSize = property(_brushless_motor.MOT_LCDMoveParams_StepSize_get, _brushless_motor.MOT_LCDMoveParams_StepSize_set)
    JogAccn = property(_brushless_motor.MOT_LCDMoveParams_JogAccn_get, _brushless_motor.MOT_LCDMoveParams_JogAccn_set)
    JogMaxVel = property(_brushless_motor.MOT_LCDMoveParams_JogMaxVel_get, _brushless_motor.MOT_LCDMoveParams_JogMaxVel_set)
    StopMode = property(_brushless_motor.MOT_LCDMoveParams_StopMode_get, _brushless_motor.MOT_LCDMoveParams_StopMode_set)
    PresetPositions = property(_brushless_motor.MOT_LCDMoveParams_PresetPositions_get, _brushless_motor.MOT_LCDMoveParams_PresetPositions_set)
    reserved = property(_brushless_motor.MOT_LCDMoveParams_reserved_get, _brushless_motor.MOT_LCDMoveParams_reserved_set)

    def __init__(self):
        _brushless_motor.MOT_LCDMoveParams_swiginit(self, _brushless_motor.new_MOT_LCDMoveParams())
    __swig_destroy__ = _brushless_motor.delete_MOT_LCDMoveParams

# Register MOT_LCDMoveParams in _brushless_motor:
_brushless_motor.MOT_LCDMoveParams_swigregister(MOT_LCDMoveParams)
class MOT_ChannelPosition(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    channelNumber = property(_brushless_motor.MOT_ChannelPosition_channelNumber_get, _brushless_motor.MOT_ChannelPosition_channelNumber_set)
    position = property(_brushless_motor.MOT_ChannelPosition_position_get, _brushless_motor.MOT_ChannelPosition_position_set)

    def __init__(self):
        _brushless_motor.MOT_ChannelPosition_swiginit(self, _brushless_motor.new_MOT_ChannelPosition())
    __swig_destroy__ = _brushless_motor.delete_MOT_ChannelPosition

# Register MOT_ChannelPosition in _brushless_motor:
_brushless_motor.MOT_ChannelPosition_swigregister(MOT_ChannelPosition)
class MOT_TriggerIOConfigParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TriggerInMode = property(_brushless_motor.MOT_TriggerIOConfigParameters_TriggerInMode_get, _brushless_motor.MOT_TriggerIOConfigParameters_TriggerInMode_set)
    TriggerInPolarity = property(_brushless_motor.MOT_TriggerIOConfigParameters_TriggerInPolarity_get, _brushless_motor.MOT_TriggerIOConfigParameters_TriggerInPolarity_set)
    InputSource = property(_brushless_motor.MOT_TriggerIOConfigParameters_InputSource_get, _brushless_motor.MOT_TriggerIOConfigParameters_InputSource_set)
    TriggerOutMode = property(_brushless_motor.MOT_TriggerIOConfigParameters_TriggerOutMode_get, _brushless_motor.MOT_TriggerIOConfigParameters_TriggerOutMode_set)
    TriggerOutPolarity = property(_brushless_motor.MOT_TriggerIOConfigParameters_TriggerOutPolarity_get, _brushless_motor.MOT_TriggerIOConfigParameters_TriggerOutPolarity_set)
    StartPositionFwd = property(_brushless_motor.MOT_TriggerIOConfigParameters_StartPositionFwd_get, _brushless_motor.MOT_TriggerIOConfigParameters_StartPositionFwd_set)
    IntervalFwd = property(_brushless_motor.MOT_TriggerIOConfigParameters_IntervalFwd_get, _brushless_motor.MOT_TriggerIOConfigParameters_IntervalFwd_set)
    PulseCountFwd = property(_brushless_motor.MOT_TriggerIOConfigParameters_PulseCountFwd_get, _brushless_motor.MOT_TriggerIOConfigParameters_PulseCountFwd_set)
    StartPositionRev = property(_brushless_motor.MOT_TriggerIOConfigParameters_StartPositionRev_get, _brushless_motor.MOT_TriggerIOConfigParameters_StartPositionRev_set)
    IntervalRev = property(_brushless_motor.MOT_TriggerIOConfigParameters_IntervalRev_get, _brushless_motor.MOT_TriggerIOConfigParameters_IntervalRev_set)
    PulseCountRev = property(_brushless_motor.MOT_TriggerIOConfigParameters_PulseCountRev_get, _brushless_motor.MOT_TriggerIOConfigParameters_PulseCountRev_set)
    PulseWidth = property(_brushless_motor.MOT_TriggerIOConfigParameters_PulseWidth_get, _brushless_motor.MOT_TriggerIOConfigParameters_PulseWidth_set)
    CycleCount = property(_brushless_motor.MOT_TriggerIOConfigParameters_CycleCount_get, _brushless_motor.MOT_TriggerIOConfigParameters_CycleCount_set)
    Reserved = property(_brushless_motor.MOT_TriggerIOConfigParameters_Reserved_get, _brushless_motor.MOT_TriggerIOConfigParameters_Reserved_set)

    def __init__(self):
        _brushless_motor.MOT_TriggerIOConfigParameters_swiginit(self, _brushless_motor.new_MOT_TriggerIOConfigParameters())
    __swig_destroy__ = _brushless_motor.delete_MOT_TriggerIOConfigParameters

# Register MOT_TriggerIOConfigParameters in _brushless_motor:
_brushless_motor.MOT_TriggerIOConfigParameters_swigregister(MOT_TriggerIOConfigParameters)

def BMC_CheckConnection(serialNo):
    return _brushless_motor.BMC_CheckConnection(serialNo)

def BMC_IsChannelValid(serialNo, channel):
    return _brushless_motor.BMC_IsChannelValid(serialNo, channel)

def BMC_MaxChannelCount(serialNo):
    return _brushless_motor.BMC_MaxChannelCount(serialNo)

def BMC_Identify(serialNo):
    return _brushless_motor.BMC_Identify(serialNo)

def BMC_GetHardwareInfo(serialNo, channel, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState):
    return _brushless_motor.BMC_GetHardwareInfo(serialNo, channel, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState)

def BMC_GetHardwareInfoBlock(serialNo, channel, hardwareInfo):
    return _brushless_motor.BMC_GetHardwareInfoBlock(serialNo, channel, hardwareInfo)

def BMC_GetNumChannels(serialNo):
    return _brushless_motor.BMC_GetNumChannels(serialNo)

def BMC_GetFirmwareVersion(serialNo, channel):
    return _brushless_motor.BMC_GetFirmwareVersion(serialNo, channel)

def BMC_GetSoftwareVersion(serialNo):
    return _brushless_motor.BMC_GetSoftwareVersion(serialNo)

def BMC_LoadSettings(serialNo, channel):
    return _brushless_motor.BMC_LoadSettings(serialNo, channel)

def BMC_LoadNamedSettings(serialNo, channel, settingsName):
    return _brushless_motor.BMC_LoadNamedSettings(serialNo, channel, settingsName)

def BMC_PersistSettings(serialNo, channel):
    return _brushless_motor.BMC_PersistSettings(serialNo, channel)

def BMC_DisableChannel(serialNo, channel):
    return _brushless_motor.BMC_DisableChannel(serialNo, channel)

def BMC_EnableChannel(serialNo, channel):
    return _brushless_motor.BMC_EnableChannel(serialNo, channel)

def BMC_GetNumberPositions(serialNo, channel):
    return _brushless_motor.BMC_GetNumberPositions(serialNo, channel)

def BMC_GetPosition(serialNo, channel):
    return _brushless_motor.BMC_GetPosition(serialNo, channel)

def BMC_CanHome(serialNo, channel):
    return _brushless_motor.BMC_CanHome(serialNo, channel)

def BMC_NeedsHoming(serialNo, channel):
    return _brushless_motor.BMC_NeedsHoming(serialNo, channel)

def BMC_CanMoveWithoutHomingFirst(serialNo, channel):
    return _brushless_motor.BMC_CanMoveWithoutHomingFirst(serialNo, channel)

def BMC_Home(serialNo, channel):
    return _brushless_motor.BMC_Home(serialNo, channel)

def BMC_OverrideHomeRequirement(serialNo, channel):
    return _brushless_motor.BMC_OverrideHomeRequirement(serialNo, channel)

def BMC_ClearMessageQueue(serialNo, channel):
    return _brushless_motor.BMC_ClearMessageQueue(serialNo, channel)

def BMC_RegisterMessageCallback(serialNo, channel, functionPointer):
    return _brushless_motor.BMC_RegisterMessageCallback(serialNo, channel, functionPointer)

def BMC_MessageQueueSize(serialNo, channel):
    return _brushless_motor.BMC_MessageQueueSize(serialNo, channel)

def BMC_GetNextMessage(serialNo, channel, messageType, messageID, messageData):
    return _brushless_motor.BMC_GetNextMessage(serialNo, channel, messageType, messageID, messageData)

def BMC_WaitForMessage(serialNo, channel, messageType, messageID, messageData):
    return _brushless_motor.BMC_WaitForMessage(serialNo, channel, messageType, messageID, messageData)

def BMC_RequestHomingParams(serialNo, channel):
    return _brushless_motor.BMC_RequestHomingParams(serialNo, channel)

def BMC_GetHomingVelocity(serialNo, channel):
    return _brushless_motor.BMC_GetHomingVelocity(serialNo, channel)

def BMC_SetHomingVelocity(serialNo, channel, velocity):
    return _brushless_motor.BMC_SetHomingVelocity(serialNo, channel, velocity)

def BMC_RequestJogParams(serialNo, channel):
    return _brushless_motor.BMC_RequestJogParams(serialNo, channel)

def BMC_GetJogMode(serialNo, channel, mode, stopMode):
    return _brushless_motor.BMC_GetJogMode(serialNo, channel, mode, stopMode)

def BMC_SetJogMode(serialNo, channel, mode, stopMode):
    return _brushless_motor.BMC_SetJogMode(serialNo, channel, mode, stopMode)

def BMC_GetJogStepSize(serialNo, channel):
    return _brushless_motor.BMC_GetJogStepSize(serialNo, channel)

def BMC_SetJogStepSize(serialNo, channel, stepSize):
    return _brushless_motor.BMC_SetJogStepSize(serialNo, channel, stepSize)

def BMC_GetJogVelParams(serialNo, channel, acceleration, maxVelocity):
    return _brushless_motor.BMC_GetJogVelParams(serialNo, channel, acceleration, maxVelocity)

def BMC_SetJogVelParams(serialNo, channel, acceleration, maxVelocity):
    return _brushless_motor.BMC_SetJogVelParams(serialNo, channel, acceleration, maxVelocity)

def BMC_MoveJog(serialNo, channel, jogDirection):
    return _brushless_motor.BMC_MoveJog(serialNo, channel, jogDirection)

def BMC_RequestVelParams(serialNo, channel):
    return _brushless_motor.BMC_RequestVelParams(serialNo, channel)

def BMC_GetVelParams(serialNo, channel, acceleration, maxVelocity):
    return _brushless_motor.BMC_GetVelParams(serialNo, channel, acceleration, maxVelocity)

def BMC_SetVelParams(serialNo, channel, acceleration, maxVelocity):
    return _brushless_motor.BMC_SetVelParams(serialNo, channel, acceleration, maxVelocity)

def BMC_MoveToPosition(serialNo, channel, index):
    return _brushless_motor.BMC_MoveToPosition(serialNo, channel, index)

def BMC_MoveRelative(serialNo, channel, displacement):
    return _brushless_motor.BMC_MoveRelative(serialNo, channel, displacement)

def BMC_MoveAtVelocity(serialNo, channel, direction):
    return _brushless_motor.BMC_MoveAtVelocity(serialNo, channel, direction)

def BMC_SetDirection(serialNo, channel, reverse):
    return _brushless_motor.BMC_SetDirection(serialNo, channel, reverse)

def BMC_StopImmediate(serialNo, channel):
    return _brushless_motor.BMC_StopImmediate(serialNo, channel)

def BMC_StopProfiled(serialNo, channel):
    return _brushless_motor.BMC_StopProfiled(serialNo, channel)

def BMC_RequestBacklash(serialNo, channel):
    return _brushless_motor.BMC_RequestBacklash(serialNo, channel)

def BMC_GetBacklash(serialNo, channel):
    return _brushless_motor.BMC_GetBacklash(serialNo, channel)

def BMC_SetBacklash(serialNo, channel, distance):
    return _brushless_motor.BMC_SetBacklash(serialNo, channel, distance)

def BMC_GetPositionCounter(serialNo, channel):
    return _brushless_motor.BMC_GetPositionCounter(serialNo, channel)

def BMC_SetPositionCounter(serialNo, channel, count):
    return _brushless_motor.BMC_SetPositionCounter(serialNo, channel, count)

def BMC_RequestEncoderCounter(serialNo, channel):
    return _brushless_motor.BMC_RequestEncoderCounter(serialNo, channel)

def BMC_GetEncoderCounter(serialNo, channel):
    return _brushless_motor.BMC_GetEncoderCounter(serialNo, channel)

def BMC_SetEncoderCounter(serialNo, channel, count):
    return _brushless_motor.BMC_SetEncoderCounter(serialNo, channel, count)

def BMC_GetVelParamsBlock(serialNo, channel, velocityParams):
    return _brushless_motor.BMC_GetVelParamsBlock(serialNo, channel, velocityParams)

def BMC_SetVelParamsBlock(serialNo, channel, velocityParams):
    return _brushless_motor.BMC_SetVelParamsBlock(serialNo, channel, velocityParams)

def BMC_SetMoveAbsolutePosition(serialNo, channel, position):
    return _brushless_motor.BMC_SetMoveAbsolutePosition(serialNo, channel, position)

def BMC_RequestMoveAbsolutePosition(serialNo, channel):
    return _brushless_motor.BMC_RequestMoveAbsolutePosition(serialNo, channel)

def BMC_GetMoveAbsolutePosition(serialNo, channel):
    return _brushless_motor.BMC_GetMoveAbsolutePosition(serialNo, channel)

def BMC_MoveAbsolute(serialNo, channel):
    return _brushless_motor.BMC_MoveAbsolute(serialNo, channel)

def BMC_SetMoveRelativeDistance(serialNo, channel, distance):
    return _brushless_motor.BMC_SetMoveRelativeDistance(serialNo, channel, distance)

def BMC_RequestMoveRelativeDistance(serialNo, channel):
    return _brushless_motor.BMC_RequestMoveRelativeDistance(serialNo, channel)

def BMC_GetMoveRelativeDistance(serialNo, channel):
    return _brushless_motor.BMC_GetMoveRelativeDistance(serialNo, channel)

def BMC_MoveRelativeDistance(serialNo, channel):
    return _brushless_motor.BMC_MoveRelativeDistance(serialNo, channel)

def BMC_GetHomingParamsBlock(serialNo, channel, homingParams):
    return _brushless_motor.BMC_GetHomingParamsBlock(serialNo, channel, homingParams)

def BMC_SetHomingParamsBlock(serialNo, channel, homingParams):
    return _brushless_motor.BMC_SetHomingParamsBlock(serialNo, channel, homingParams)

def BMC_GetJogParamsBlock(serialNo, channel, jogParams):
    return _brushless_motor.BMC_GetJogParamsBlock(serialNo, channel, jogParams)

def BMC_SetJogParamsBlock(serialNo, channel, jogParams):
    return _brushless_motor.BMC_SetJogParamsBlock(serialNo, channel, jogParams)

def BMC_RequestVelocityProfileParams(serialNo, channel):
    return _brushless_motor.BMC_RequestVelocityProfileParams(serialNo, channel)

def BMC_GetVelocityProfileParams(serialNo, channel, velocityProfileParams):
    return _brushless_motor.BMC_GetVelocityProfileParams(serialNo, channel, velocityProfileParams)

def BMC_SetVelocityProfileParams(serialNo, channel, velocityProfileParams):
    return _brushless_motor.BMC_SetVelocityProfileParams(serialNo, channel, velocityProfileParams)

def BMC_RequestStageAxisParams(serialNo, channel):
    return _brushless_motor.BMC_RequestStageAxisParams(serialNo, channel)

def BMC_GetStageAxisParamsBlock(serialNo, channel, stageAxisParams):
    return _brushless_motor.BMC_GetStageAxisParamsBlock(serialNo, channel, stageAxisParams)

def BMC_GetStageAxisParams(serialNo, channel, stageID, axisID, partNumber, size, serialNumber, countsPerUnit, minPosition, maxPosition, maxAcceleration, maxDecceleration, maxVelocity):
    return _brushless_motor.BMC_GetStageAxisParams(serialNo, channel, stageID, axisID, partNumber, size, serialNumber, countsPerUnit, minPosition, maxPosition, maxAcceleration, maxDecceleration, maxVelocity)

def BMC_GetStageAxisMinPos(serialNo, channel):
    return _brushless_motor.BMC_GetStageAxisMinPos(serialNo, channel)

def BMC_GetStageAxisMaxPos(serialNo, channel):
    return _brushless_motor.BMC_GetStageAxisMaxPos(serialNo, channel)

def BMC_SetStageAxisLimits(serialNo, channel, minPosition, maxPosition):
    return _brushless_motor.BMC_SetStageAxisLimits(serialNo, channel, minPosition, maxPosition)

def BMC_GetSoftLimitMode(serialNo, channel):
    return _brushless_motor.BMC_GetSoftLimitMode(serialNo, channel)

def BMC_SetLimitsSoftwareApproachPolicy(serialNo, channel, limitsSoftwareApproachPolicy):
    return _brushless_motor.BMC_SetLimitsSoftwareApproachPolicy(serialNo, channel, limitsSoftwareApproachPolicy)

def BMC_SetMotorTravelMode(serialNo, channel, travelMode):
    return _brushless_motor.BMC_SetMotorTravelMode(serialNo, channel, travelMode)

def BMC_GetMotorTravelMode(serialNo, channel):
    return _brushless_motor.BMC_GetMotorTravelMode(serialNo, channel)

def BMC_SetMotorParams(serialNo, channel, countsPerUnit):
    return _brushless_motor.BMC_SetMotorParams(serialNo, channel, countsPerUnit)

def BMC_GetMotorParams(serialNo, channel, countsPerUnit):
    return _brushless_motor.BMC_GetMotorParams(serialNo, channel, countsPerUnit)

def BMC_SetMotorParamsExt(serialNo, channel, countsPerUnit):
    return _brushless_motor.BMC_SetMotorParamsExt(serialNo, channel, countsPerUnit)

def BMC_GetMotorParamsExt(serialNo, channel, countsPerUnit):
    return _brushless_motor.BMC_GetMotorParamsExt(serialNo, channel, countsPerUnit)

def BMC_SetMotorVelocityLimits(serialNo, channel, maxVelocity, maxAcceleration):
    return _brushless_motor.BMC_SetMotorVelocityLimits(serialNo, channel, maxVelocity, maxAcceleration)

def BMC_GetMotorVelocityLimits(serialNo, channel, maxVelocity, maxAcceleration):
    return _brushless_motor.BMC_GetMotorVelocityLimits(serialNo, channel, maxVelocity, maxAcceleration)

def BMC_ResetRotationModes(serialNo, channel):
    return _brushless_motor.BMC_ResetRotationModes(serialNo, channel)

def BMC_SetRotationModes(serialNo, channel, mode, direction):
    return _brushless_motor.BMC_SetRotationModes(serialNo, channel, mode, direction)

def BMC_SetMotorTravelLimits(serialNo, channel, minPosition, maxPosition):
    return _brushless_motor.BMC_SetMotorTravelLimits(serialNo, channel, minPosition, maxPosition)

def BMC_GetMotorTravelLimits(serialNo, channel, minPosition, maxPosition):
    return _brushless_motor.BMC_GetMotorTravelLimits(serialNo, channel, minPosition, maxPosition)

def BMC_GetRealValueFromDeviceUnit(serialNo, channel, device_unit, real_unit, unitType):
    return _brushless_motor.BMC_GetRealValueFromDeviceUnit(serialNo, channel, device_unit, real_unit, unitType)

def BMC_GetDeviceUnitFromRealValue(serialNo, channel, real_unit, device_unit, unitType):
    return _brushless_motor.BMC_GetDeviceUnitFromRealValue(serialNo, channel, real_unit, device_unit, unitType)

def BMC_RequestJoystickParams(serialNo, channel):
    return _brushless_motor.BMC_RequestJoystickParams(serialNo, channel)

def BMC_GetJoystickParams(serialNo, channel, joystickParams):
    return _brushless_motor.BMC_GetJoystickParams(serialNo, channel, joystickParams)

def BMC_SetJoystickParams(serialNo, channel, joystickParams):
    return _brushless_motor.BMC_SetJoystickParams(serialNo, channel, joystickParams)

def BMC_RequestPosLoopParams(serialNo, channel):
    return _brushless_motor.BMC_RequestPosLoopParams(serialNo, channel)

def BMC_GetPosLoopParams(serialNo, channel, positionLoopParams):
    return _brushless_motor.BMC_GetPosLoopParams(serialNo, channel, positionLoopParams)

def BMC_SetPosLoopParams(serialNo, channel, positionLoopParams):
    return _brushless_motor.BMC_SetPosLoopParams(serialNo, channel, positionLoopParams)

def BMC_RequestTrackSettleParams(serialNo, channel):
    return _brushless_motor.BMC_RequestTrackSettleParams(serialNo, channel)

def BMC_GetTrackSettleParams(serialNo, channel, settleParams):
    return _brushless_motor.BMC_GetTrackSettleParams(serialNo, channel, settleParams)

def BMC_SetTrackSettleParams(serialNo, channel, settleParams):
    return _brushless_motor.BMC_SetTrackSettleParams(serialNo, channel, settleParams)

def BMC_RequestCurrentLoopParams(serialNo, channel):
    return _brushless_motor.BMC_RequestCurrentLoopParams(serialNo, channel)

def BMC_GetCurrentLoopParams(serialNo, channel, currentLoopParams):
    return _brushless_motor.BMC_GetCurrentLoopParams(serialNo, channel, currentLoopParams)

def BMC_SetCurrentLoopParams(serialNo, channel, currentLoopParams):
    return _brushless_motor.BMC_SetCurrentLoopParams(serialNo, channel, currentLoopParams)

def BMC_RequestSettledCurrentLoopParams(serialNo, channel):
    return _brushless_motor.BMC_RequestSettledCurrentLoopParams(serialNo, channel)

def BMC_GetSettledCurrentLoopParams(serialNo, channel, currentLoopParams):
    return _brushless_motor.BMC_GetSettledCurrentLoopParams(serialNo, channel, currentLoopParams)

def BMC_SetSettledCurrentLoopParams(serialNo, channel, currentLoopParams):
    return _brushless_motor.BMC_SetSettledCurrentLoopParams(serialNo, channel, currentLoopParams)

def BMC_RequestElectricOutputParams(serialNo, channel):
    return _brushless_motor.BMC_RequestElectricOutputParams(serialNo, channel)

def BMC_GetElectricOutputParams(serialNo, channel, electricOutputParams):
    return _brushless_motor.BMC_GetElectricOutputParams(serialNo, channel, electricOutputParams)

def BMC_SetElectricOutputParams(serialNo, channel, electricOutputParams):
    return _brushless_motor.BMC_SetElectricOutputParams(serialNo, channel, electricOutputParams)

def BMC_RequestTriggerSwitches(serialNo, channel):
    return _brushless_motor.BMC_RequestTriggerSwitches(serialNo, channel)

def BMC_GetTriggerSwitches(serialNo, channel):
    return _brushless_motor.BMC_GetTriggerSwitches(serialNo, channel)

def BMC_SetTriggerSwitches(serialNo, channel, indicatorBits):
    return _brushless_motor.BMC_SetTriggerSwitches(serialNo, channel, indicatorBits)

def BMC_RequestRackDigitalOutputs(serialNo):
    return _brushless_motor.BMC_RequestRackDigitalOutputs(serialNo)

def BMC_GetRackDigitalOutputs(serialNo):
    return _brushless_motor.BMC_GetRackDigitalOutputs(serialNo)

def BMC_SetRackDigitalOutputs(serialNo, outputsBits):
    return _brushless_motor.BMC_SetRackDigitalOutputs(serialNo, outputsBits)

def BMC_RequestRackStatusBits(serialNo):
    return _brushless_motor.BMC_RequestRackStatusBits(serialNo)

def BMC_GetRackStatusBits(serialNo):
    return _brushless_motor.BMC_GetRackStatusBits(serialNo)

def BMC_SuspendMoveMessages(serialNo, channel):
    return _brushless_motor.BMC_SuspendMoveMessages(serialNo, channel)

def BMC_ResumeMoveMessages(serialNo, channel):
    return _brushless_motor.BMC_ResumeMoveMessages(serialNo, channel)

def BMC_RequestPosition(serialNo, channel):
    return _brushless_motor.BMC_RequestPosition(serialNo, channel)

def BMC_RequestStatusBits(serialNo, channel):
    return _brushless_motor.BMC_RequestStatusBits(serialNo, channel)

def BMC_GetStatusBits(serialNo, channel):
    return _brushless_motor.BMC_GetStatusBits(serialNo, channel)

def BMC_StartPolling(serialNo, channel, milliseconds):
    return _brushless_motor.BMC_StartPolling(serialNo, channel, milliseconds)

def BMC_PollingDuration(serialNo, channel):
    return _brushless_motor.BMC_PollingDuration(serialNo, channel)

def BMC_StopPolling(serialNo, channel):
    return _brushless_motor.BMC_StopPolling(serialNo, channel)

def BMC_TimeSinceLastMsgReceived(serialNo, channel, lastUpdateTimeMS):
    return _brushless_motor.BMC_TimeSinceLastMsgReceived(serialNo, channel, lastUpdateTimeMS)

def BMC_EnableLastMsgTimer(serialNo, channel, enable, lastMsgTimeout):
    return _brushless_motor.BMC_EnableLastMsgTimer(serialNo, channel, enable, lastMsgTimeout)

def BMC_HasLastMsgTimerOverrun(serialNo, channel):
    return _brushless_motor.BMC_HasLastMsgTimerOverrun(serialNo, channel)

def BMC_RequestSettings(serialNo, channel):
    return _brushless_motor.BMC_RequestSettings(serialNo, channel)

def BMC_ResetStageToDefaults(serialNo, channel):
    return _brushless_motor.BMC_ResetStageToDefaults(serialNo, channel)

def BMC_RequestTriggerIOConfigParams(serialNo, channel):
    return _brushless_motor.BMC_RequestTriggerIOConfigParams(serialNo, channel)

def BMC_GetTriggerIOConfigParams(serialNo, channel, triggerInMode, triggerInPolarity, inputSource, triggerOutMode, triggerOutPolarity, startPositionFwd, intervalFwd, pulseCountFwd, startPositionRev, intervalRev, pulseCountRev, pulseWidth, cycleCount):
    return _brushless_motor.BMC_GetTriggerIOConfigParams(serialNo, channel, triggerInMode, triggerInPolarity, inputSource, triggerOutMode, triggerOutPolarity, startPositionFwd, intervalFwd, pulseCountFwd, startPositionRev, intervalRev, pulseCountRev, pulseWidth, cycleCount)

def BMC_GetTriggerIOConfigParamsBlock(serialNo, channel, TriggerIOConfigParameters):
    return _brushless_motor.BMC_GetTriggerIOConfigParamsBlock(serialNo, channel, TriggerIOConfigParameters)

def BMC_SetTriggerIOConfigParams(serialNo, channel, triggerInMode, triggerInPolarity, inputSource, triggerOutMode, triggerOutPolarity, startPositionFwd, intervalFwd, pulseCountFwd, startPositionRev, intervalRev, pulseCountRev, pulseWidth, cycleCount):
    return _brushless_motor.BMC_SetTriggerIOConfigParams(serialNo, channel, triggerInMode, triggerInPolarity, inputSource, triggerOutMode, triggerOutPolarity, startPositionFwd, intervalFwd, pulseCountFwd, startPositionRev, intervalRev, pulseCountRev, pulseWidth, cycleCount)

def BMC_SetTriggerIOConfigParamsBlock(serialNo, channel, TriggerIOConfigParameters):
    return _brushless_motor.BMC_SetTriggerIOConfigParamsBlock(serialNo, channel, TriggerIOConfigParameters)

def BMC_RequestPositionTriggerState(serialNo, channel):
    return _brushless_motor.BMC_RequestPositionTriggerState(serialNo, channel)

def BMC_GetPositionTriggerState(serialNo, channel, TriggerState):
    return _brushless_motor.BMC_GetPositionTriggerState(serialNo, channel, TriggerState)

def BMC_SetPositionTriggerState(serialNo, channel, TriggerState):
    return _brushless_motor.BMC_SetPositionTriggerState(serialNo, channel, TriggerState)

