# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _vertical_stage
else:
    import _vertical_stage

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


FT_OK = _vertical_stage.FT_OK
FT_InvalidHandle = _vertical_stage.FT_InvalidHandle
FT_DeviceNotFound = _vertical_stage.FT_DeviceNotFound
FT_DeviceNotOpened = _vertical_stage.FT_DeviceNotOpened
FT_IOError = _vertical_stage.FT_IOError
FT_InsufficientResources = _vertical_stage.FT_InsufficientResources
FT_InvalidParameter = _vertical_stage.FT_InvalidParameter
FT_DeviceNotPresent = _vertical_stage.FT_DeviceNotPresent
FT_IncorrectDevice = _vertical_stage.FT_IncorrectDevice
MOT_NotMotor = _vertical_stage.MOT_NotMotor
MOT_DCMotor = _vertical_stage.MOT_DCMotor
MOT_StepperMotor = _vertical_stage.MOT_StepperMotor
MOT_BrushlessMotor = _vertical_stage.MOT_BrushlessMotor
MOT_CustomMotor = _vertical_stage.MOT_CustomMotor
MOT_TravelModeUndefined = _vertical_stage.MOT_TravelModeUndefined
MOT_Linear = _vertical_stage.MOT_Linear
MOT_Rotational = _vertical_stage.MOT_Rotational
MOT_TravelDirectionUndefined = _vertical_stage.MOT_TravelDirectionUndefined
MOT_Forwards = _vertical_stage.MOT_Forwards
MOT_Backwards = _vertical_stage.MOT_Backwards
MOT_LimitSwitchDirectionUndefined = _vertical_stage.MOT_LimitSwitchDirectionUndefined
MOT_ReverseLimitSwitch = _vertical_stage.MOT_ReverseLimitSwitch
MOT_ForwardLimitSwitch = _vertical_stage.MOT_ForwardLimitSwitch
MOT_Normal = _vertical_stage.MOT_Normal
MOT_Reverse = _vertical_stage.MOT_Reverse
MOT_JogModeUndefined = _vertical_stage.MOT_JogModeUndefined
MOT_Continuous = _vertical_stage.MOT_Continuous
MOT_SingleStep = _vertical_stage.MOT_SingleStep
MOT_StopModeUndefined = _vertical_stage.MOT_StopModeUndefined
MOT_Immediate = _vertical_stage.MOT_Immediate
MOT_Profiled = _vertical_stage.MOT_Profiled
MOT_LimitSwitchModeUndefined = _vertical_stage.MOT_LimitSwitchModeUndefined
MOT_LimitSwitchIgnoreSwitch = _vertical_stage.MOT_LimitSwitchIgnoreSwitch
MOT_LimitSwitchMakeOnContact = _vertical_stage.MOT_LimitSwitchMakeOnContact
MOT_LimitSwitchBreakOnContact = _vertical_stage.MOT_LimitSwitchBreakOnContact
MOT_LimitSwitchMakeOnHome = _vertical_stage.MOT_LimitSwitchMakeOnHome
MOT_LimitSwitchBreakOnHome = _vertical_stage.MOT_LimitSwitchBreakOnHome
MOT_PMD_Reserved = _vertical_stage.MOT_PMD_Reserved
MOT_LimitSwitchIgnoreSwitchSwapped = _vertical_stage.MOT_LimitSwitchIgnoreSwitchSwapped
MOT_LimitSwitchMakeOnContactSwapped = _vertical_stage.MOT_LimitSwitchMakeOnContactSwapped
MOT_LimitSwitchBreakOnContactSwapped = _vertical_stage.MOT_LimitSwitchBreakOnContactSwapped
MOT_LimitSwitchMakeOnHomeSwapped = _vertical_stage.MOT_LimitSwitchMakeOnHomeSwapped
MOT_LimitSwitchBreakOnHomeSwapped = _vertical_stage.MOT_LimitSwitchBreakOnHomeSwapped
MOT_LimitSwitchSWModeUndefined = _vertical_stage.MOT_LimitSwitchSWModeUndefined
MOT_LimitSwitchIgnored = _vertical_stage.MOT_LimitSwitchIgnored
MOT_LimitSwitchStopImmediate = _vertical_stage.MOT_LimitSwitchStopImmediate
MOT_LimitSwitchStopProfiled = _vertical_stage.MOT_LimitSwitchStopProfiled
MOT_LimitSwitchIgnored_Rotational = _vertical_stage.MOT_LimitSwitchIgnored_Rotational
MOT_LimitSwitchStopImmediate_Rotational = _vertical_stage.MOT_LimitSwitchStopImmediate_Rotational
MOT_LimitSwitchStopProfiled_Rotational = _vertical_stage.MOT_LimitSwitchStopProfiled_Rotational
DisallowIllegalMoves = _vertical_stage.DisallowIllegalMoves
AllowPartialMoves = _vertical_stage.AllowPartialMoves
AllowAllMoves = _vertical_stage.AllowAllMoves
KMOT_WM_Positive = _vertical_stage.KMOT_WM_Positive
KMOT_WM_Negative = _vertical_stage.KMOT_WM_Negative
KMOT_WM_Velocity = _vertical_stage.KMOT_WM_Velocity
KMOT_WM_Jog = _vertical_stage.KMOT_WM_Jog
KMOT_WM_MoveAbsolute = _vertical_stage.KMOT_WM_MoveAbsolute
KMOT_TrigDisabled = _vertical_stage.KMOT_TrigDisabled
KMOT_TrigIn_GPI = _vertical_stage.KMOT_TrigIn_GPI
KMOT_TrigIn_RelativeMove = _vertical_stage.KMOT_TrigIn_RelativeMove
KMOT_TrigIn_AbsoluteMove = _vertical_stage.KMOT_TrigIn_AbsoluteMove
KMOT_TrigIn_Home = _vertical_stage.KMOT_TrigIn_Home
KMOT_TrigIn_Stop = _vertical_stage.KMOT_TrigIn_Stop
KMOT_TrigIn_StartScan = _vertical_stage.KMOT_TrigIn_StartScan
KMOT_TrigIn_ShuttleMove = _vertical_stage.KMOT_TrigIn_ShuttleMove
KMOT_TrigOut_GPO = _vertical_stage.KMOT_TrigOut_GPO
KMOT_TrigOut_InMotion = _vertical_stage.KMOT_TrigOut_InMotion
KMOT_TrigOut_AtMaxVelocity = _vertical_stage.KMOT_TrigOut_AtMaxVelocity
KMOT_TrigOut_AtPositionSteps = _vertical_stage.KMOT_TrigOut_AtPositionSteps
KMOT_TrigOut_Synch = _vertical_stage.KMOT_TrigOut_Synch
KMOT_TrigPolarityHigh = _vertical_stage.KMOT_TrigPolarityHigh
KMOT_TrigPolarityLow = _vertical_stage.KMOT_TrigPolarityLow
class TLI_DeviceInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    typeID = property(_vertical_stage.TLI_DeviceInfo_typeID_get, _vertical_stage.TLI_DeviceInfo_typeID_set)
    description = property(_vertical_stage.TLI_DeviceInfo_description_get, _vertical_stage.TLI_DeviceInfo_description_set)
    serialNo = property(_vertical_stage.TLI_DeviceInfo_serialNo_get, _vertical_stage.TLI_DeviceInfo_serialNo_set)
    PID = property(_vertical_stage.TLI_DeviceInfo_PID_get, _vertical_stage.TLI_DeviceInfo_PID_set)
    isKnownType = property(_vertical_stage.TLI_DeviceInfo_isKnownType_get, _vertical_stage.TLI_DeviceInfo_isKnownType_set)
    motorType = property(_vertical_stage.TLI_DeviceInfo_motorType_get, _vertical_stage.TLI_DeviceInfo_motorType_set)
    isPiezoDevice = property(_vertical_stage.TLI_DeviceInfo_isPiezoDevice_get, _vertical_stage.TLI_DeviceInfo_isPiezoDevice_set)
    isLaser = property(_vertical_stage.TLI_DeviceInfo_isLaser_get, _vertical_stage.TLI_DeviceInfo_isLaser_set)
    isCustomType = property(_vertical_stage.TLI_DeviceInfo_isCustomType_get, _vertical_stage.TLI_DeviceInfo_isCustomType_set)
    isRack = property(_vertical_stage.TLI_DeviceInfo_isRack_get, _vertical_stage.TLI_DeviceInfo_isRack_set)
    maxChannels = property(_vertical_stage.TLI_DeviceInfo_maxChannels_get, _vertical_stage.TLI_DeviceInfo_maxChannels_set)

    def __init__(self):
        _vertical_stage.TLI_DeviceInfo_swiginit(self, _vertical_stage.new_TLI_DeviceInfo())
    __swig_destroy__ = _vertical_stage.delete_TLI_DeviceInfo

# Register TLI_DeviceInfo in _vertical_stage:
_vertical_stage.TLI_DeviceInfo_swigregister(TLI_DeviceInfo)
class TLI_HardwareInformation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    serialNumber = property(_vertical_stage.TLI_HardwareInformation_serialNumber_get, _vertical_stage.TLI_HardwareInformation_serialNumber_set)
    modelNumber = property(_vertical_stage.TLI_HardwareInformation_modelNumber_get, _vertical_stage.TLI_HardwareInformation_modelNumber_set)
    type = property(_vertical_stage.TLI_HardwareInformation_type_get, _vertical_stage.TLI_HardwareInformation_type_set)
    firmwareVersion = property(_vertical_stage.TLI_HardwareInformation_firmwareVersion_get, _vertical_stage.TLI_HardwareInformation_firmwareVersion_set)
    notes = property(_vertical_stage.TLI_HardwareInformation_notes_get, _vertical_stage.TLI_HardwareInformation_notes_set)
    deviceDependantData = property(_vertical_stage.TLI_HardwareInformation_deviceDependantData_get, _vertical_stage.TLI_HardwareInformation_deviceDependantData_set)
    hardwareVersion = property(_vertical_stage.TLI_HardwareInformation_hardwareVersion_get, _vertical_stage.TLI_HardwareInformation_hardwareVersion_set)
    modificationState = property(_vertical_stage.TLI_HardwareInformation_modificationState_get, _vertical_stage.TLI_HardwareInformation_modificationState_set)
    numChannels = property(_vertical_stage.TLI_HardwareInformation_numChannels_get, _vertical_stage.TLI_HardwareInformation_numChannels_set)

    def __init__(self):
        _vertical_stage.TLI_HardwareInformation_swiginit(self, _vertical_stage.new_TLI_HardwareInformation())
    __swig_destroy__ = _vertical_stage.delete_TLI_HardwareInformation

# Register TLI_HardwareInformation in _vertical_stage:
_vertical_stage.TLI_HardwareInformation_swigregister(TLI_HardwareInformation)
class MOT_VelocityParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    minVelocity = property(_vertical_stage.MOT_VelocityParameters_minVelocity_get, _vertical_stage.MOT_VelocityParameters_minVelocity_set)
    acceleration = property(_vertical_stage.MOT_VelocityParameters_acceleration_get, _vertical_stage.MOT_VelocityParameters_acceleration_set)
    maxVelocity = property(_vertical_stage.MOT_VelocityParameters_maxVelocity_get, _vertical_stage.MOT_VelocityParameters_maxVelocity_set)

    def __init__(self):
        _vertical_stage.MOT_VelocityParameters_swiginit(self, _vertical_stage.new_MOT_VelocityParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_VelocityParameters

# Register MOT_VelocityParameters in _vertical_stage:
_vertical_stage.MOT_VelocityParameters_swigregister(MOT_VelocityParameters)
class MOT_JogParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mode = property(_vertical_stage.MOT_JogParameters_mode_get, _vertical_stage.MOT_JogParameters_mode_set)
    stepSize = property(_vertical_stage.MOT_JogParameters_stepSize_get, _vertical_stage.MOT_JogParameters_stepSize_set)
    velParams = property(_vertical_stage.MOT_JogParameters_velParams_get, _vertical_stage.MOT_JogParameters_velParams_set)
    stopMode = property(_vertical_stage.MOT_JogParameters_stopMode_get, _vertical_stage.MOT_JogParameters_stopMode_set)

    def __init__(self):
        _vertical_stage.MOT_JogParameters_swiginit(self, _vertical_stage.new_MOT_JogParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_JogParameters

# Register MOT_JogParameters in _vertical_stage:
_vertical_stage.MOT_JogParameters_swigregister(MOT_JogParameters)
class MOT_HomingParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    direction = property(_vertical_stage.MOT_HomingParameters_direction_get, _vertical_stage.MOT_HomingParameters_direction_set)
    limitSwitch = property(_vertical_stage.MOT_HomingParameters_limitSwitch_get, _vertical_stage.MOT_HomingParameters_limitSwitch_set)
    velocity = property(_vertical_stage.MOT_HomingParameters_velocity_get, _vertical_stage.MOT_HomingParameters_velocity_set)
    offsetDistance = property(_vertical_stage.MOT_HomingParameters_offsetDistance_get, _vertical_stage.MOT_HomingParameters_offsetDistance_set)

    def __init__(self):
        _vertical_stage.MOT_HomingParameters_swiginit(self, _vertical_stage.new_MOT_HomingParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_HomingParameters

# Register MOT_HomingParameters in _vertical_stage:
_vertical_stage.MOT_HomingParameters_swigregister(MOT_HomingParameters)
class MOT_LimitSwitchParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    clockwiseHardwareLimit = property(_vertical_stage.MOT_LimitSwitchParameters_clockwiseHardwareLimit_get, _vertical_stage.MOT_LimitSwitchParameters_clockwiseHardwareLimit_set)
    anticlockwiseHardwareLimit = property(_vertical_stage.MOT_LimitSwitchParameters_anticlockwiseHardwareLimit_get, _vertical_stage.MOT_LimitSwitchParameters_anticlockwiseHardwareLimit_set)
    clockwisePosition = property(_vertical_stage.MOT_LimitSwitchParameters_clockwisePosition_get, _vertical_stage.MOT_LimitSwitchParameters_clockwisePosition_set)
    anticlockwisePosition = property(_vertical_stage.MOT_LimitSwitchParameters_anticlockwisePosition_get, _vertical_stage.MOT_LimitSwitchParameters_anticlockwisePosition_set)
    softLimitMode = property(_vertical_stage.MOT_LimitSwitchParameters_softLimitMode_get, _vertical_stage.MOT_LimitSwitchParameters_softLimitMode_set)

    def __init__(self):
        _vertical_stage.MOT_LimitSwitchParameters_swiginit(self, _vertical_stage.new_MOT_LimitSwitchParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_LimitSwitchParameters

# Register MOT_LimitSwitchParameters in _vertical_stage:
_vertical_stage.MOT_LimitSwitchParameters_swigregister(MOT_LimitSwitchParameters)
class MOT_DC_PIDParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    proportionalGain = property(_vertical_stage.MOT_DC_PIDParameters_proportionalGain_get, _vertical_stage.MOT_DC_PIDParameters_proportionalGain_set)
    integralGain = property(_vertical_stage.MOT_DC_PIDParameters_integralGain_get, _vertical_stage.MOT_DC_PIDParameters_integralGain_set)
    differentialGain = property(_vertical_stage.MOT_DC_PIDParameters_differentialGain_get, _vertical_stage.MOT_DC_PIDParameters_differentialGain_set)
    integralLimit = property(_vertical_stage.MOT_DC_PIDParameters_integralLimit_get, _vertical_stage.MOT_DC_PIDParameters_integralLimit_set)
    parameterFilter = property(_vertical_stage.MOT_DC_PIDParameters_parameterFilter_get, _vertical_stage.MOT_DC_PIDParameters_parameterFilter_set)

    def __init__(self):
        _vertical_stage.MOT_DC_PIDParameters_swiginit(self, _vertical_stage.new_MOT_DC_PIDParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_DC_PIDParameters

# Register MOT_DC_PIDParameters in _vertical_stage:
_vertical_stage.MOT_DC_PIDParameters_swigregister(MOT_DC_PIDParameters)
class MOT_BrushlessTrackSettleParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    time = property(_vertical_stage.MOT_BrushlessTrackSettleParameters_time_get, _vertical_stage.MOT_BrushlessTrackSettleParameters_time_set)
    settledError = property(_vertical_stage.MOT_BrushlessTrackSettleParameters_settledError_get, _vertical_stage.MOT_BrushlessTrackSettleParameters_settledError_set)
    maxTrackingError = property(_vertical_stage.MOT_BrushlessTrackSettleParameters_maxTrackingError_get, _vertical_stage.MOT_BrushlessTrackSettleParameters_maxTrackingError_set)
    notUsed = property(_vertical_stage.MOT_BrushlessTrackSettleParameters_notUsed_get, _vertical_stage.MOT_BrushlessTrackSettleParameters_notUsed_set)
    lastNotUsed = property(_vertical_stage.MOT_BrushlessTrackSettleParameters_lastNotUsed_get, _vertical_stage.MOT_BrushlessTrackSettleParameters_lastNotUsed_set)

    def __init__(self):
        _vertical_stage.MOT_BrushlessTrackSettleParameters_swiginit(self, _vertical_stage.new_MOT_BrushlessTrackSettleParameters())
    __swig_destroy__ = _vertical_stage.delete_MOT_BrushlessTrackSettleParameters

# Register MOT_BrushlessTrackSettleParameters in _vertical_stage:
_vertical_stage.MOT_BrushlessTrackSettleParameters_swigregister(MOT_BrushlessTrackSettleParameters)
class KMOT_MMIParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WheelMode = property(_vertical_stage.KMOT_MMIParams_WheelMode_get, _vertical_stage.KMOT_MMIParams_WheelMode_set)
    WheelMaxVelocity = property(_vertical_stage.KMOT_MMIParams_WheelMaxVelocity_get, _vertical_stage.KMOT_MMIParams_WheelMaxVelocity_set)
    WheelAcceleration = property(_vertical_stage.KMOT_MMIParams_WheelAcceleration_get, _vertical_stage.KMOT_MMIParams_WheelAcceleration_set)
    WheelDirectionSense = property(_vertical_stage.KMOT_MMIParams_WheelDirectionSense_get, _vertical_stage.KMOT_MMIParams_WheelDirectionSense_set)
    PresetPos1 = property(_vertical_stage.KMOT_MMIParams_PresetPos1_get, _vertical_stage.KMOT_MMIParams_PresetPos1_set)
    PresetPos2 = property(_vertical_stage.KMOT_MMIParams_PresetPos2_get, _vertical_stage.KMOT_MMIParams_PresetPos2_set)
    DisplayIntensity = property(_vertical_stage.KMOT_MMIParams_DisplayIntensity_get, _vertical_stage.KMOT_MMIParams_DisplayIntensity_set)
    DisplayTimeout = property(_vertical_stage.KMOT_MMIParams_DisplayTimeout_get, _vertical_stage.KMOT_MMIParams_DisplayTimeout_set)
    DisplayDimIntensity = property(_vertical_stage.KMOT_MMIParams_DisplayDimIntensity_get, _vertical_stage.KMOT_MMIParams_DisplayDimIntensity_set)
    reserved = property(_vertical_stage.KMOT_MMIParams_reserved_get, _vertical_stage.KMOT_MMIParams_reserved_set)

    def __init__(self):
        _vertical_stage.KMOT_MMIParams_swiginit(self, _vertical_stage.new_KMOT_MMIParams())
    __swig_destroy__ = _vertical_stage.delete_KMOT_MMIParams

# Register KMOT_MMIParams in _vertical_stage:
_vertical_stage.KMOT_MMIParams_swigregister(KMOT_MMIParams)
class KMOT_TriggerConfig(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Trigger1Mode = property(_vertical_stage.KMOT_TriggerConfig_Trigger1Mode_get, _vertical_stage.KMOT_TriggerConfig_Trigger1Mode_set)
    Trigger1Polarity = property(_vertical_stage.KMOT_TriggerConfig_Trigger1Polarity_get, _vertical_stage.KMOT_TriggerConfig_Trigger1Polarity_set)
    Trigger2Mode = property(_vertical_stage.KMOT_TriggerConfig_Trigger2Mode_get, _vertical_stage.KMOT_TriggerConfig_Trigger2Mode_set)
    Trigger2Polarity = property(_vertical_stage.KMOT_TriggerConfig_Trigger2Polarity_get, _vertical_stage.KMOT_TriggerConfig_Trigger2Polarity_set)
    reserved = property(_vertical_stage.KMOT_TriggerConfig_reserved_get, _vertical_stage.KMOT_TriggerConfig_reserved_set)

    def __init__(self):
        _vertical_stage.KMOT_TriggerConfig_swiginit(self, _vertical_stage.new_KMOT_TriggerConfig())
    __swig_destroy__ = _vertical_stage.delete_KMOT_TriggerConfig

# Register KMOT_TriggerConfig in _vertical_stage:
_vertical_stage.KMOT_TriggerConfig_swigregister(KMOT_TriggerConfig)
class KMOT_TriggerParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TriggerStartPositionFwd = property(_vertical_stage.KMOT_TriggerParams_TriggerStartPositionFwd_get, _vertical_stage.KMOT_TriggerParams_TriggerStartPositionFwd_set)
    TriggerIntervalFwd = property(_vertical_stage.KMOT_TriggerParams_TriggerIntervalFwd_get, _vertical_stage.KMOT_TriggerParams_TriggerIntervalFwd_set)
    TriggerPulseCountFwd = property(_vertical_stage.KMOT_TriggerParams_TriggerPulseCountFwd_get, _vertical_stage.KMOT_TriggerParams_TriggerPulseCountFwd_set)
    TriggerStartPositionRev = property(_vertical_stage.KMOT_TriggerParams_TriggerStartPositionRev_get, _vertical_stage.KMOT_TriggerParams_TriggerStartPositionRev_set)
    TriggerIntervalRev = property(_vertical_stage.KMOT_TriggerParams_TriggerIntervalRev_get, _vertical_stage.KMOT_TriggerParams_TriggerIntervalRev_set)
    TriggerPulseCountRev = property(_vertical_stage.KMOT_TriggerParams_TriggerPulseCountRev_get, _vertical_stage.KMOT_TriggerParams_TriggerPulseCountRev_set)
    TriggerPulseWidth = property(_vertical_stage.KMOT_TriggerParams_TriggerPulseWidth_get, _vertical_stage.KMOT_TriggerParams_TriggerPulseWidth_set)
    CycleCount = property(_vertical_stage.KMOT_TriggerParams_CycleCount_get, _vertical_stage.KMOT_TriggerParams_CycleCount_set)
    reserved = property(_vertical_stage.KMOT_TriggerParams_reserved_get, _vertical_stage.KMOT_TriggerParams_reserved_set)

    def __init__(self):
        _vertical_stage.KMOT_TriggerParams_swiginit(self, _vertical_stage.new_KMOT_TriggerParams())
    __swig_destroy__ = _vertical_stage.delete_KMOT_TriggerParams

# Register KMOT_TriggerParams in _vertical_stage:
_vertical_stage.KMOT_TriggerParams_swigregister(KMOT_TriggerParams)
class MOT_EncoderResolutionParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    encoderResolutionWholeNumber = property(_vertical_stage.MOT_EncoderResolutionParams_encoderResolutionWholeNumber_get, _vertical_stage.MOT_EncoderResolutionParams_encoderResolutionWholeNumber_set)
    encoderResolutionFraction = property(_vertical_stage.MOT_EncoderResolutionParams_encoderResolutionFraction_get, _vertical_stage.MOT_EncoderResolutionParams_encoderResolutionFraction_set)
    unused1 = property(_vertical_stage.MOT_EncoderResolutionParams_unused1_get, _vertical_stage.MOT_EncoderResolutionParams_unused1_set)
    unused2 = property(_vertical_stage.MOT_EncoderResolutionParams_unused2_get, _vertical_stage.MOT_EncoderResolutionParams_unused2_set)
    unused3 = property(_vertical_stage.MOT_EncoderResolutionParams_unused3_get, _vertical_stage.MOT_EncoderResolutionParams_unused3_set)

    def __init__(self):
        _vertical_stage.MOT_EncoderResolutionParams_swiginit(self, _vertical_stage.new_MOT_EncoderResolutionParams())
    __swig_destroy__ = _vertical_stage.delete_MOT_EncoderResolutionParams

# Register MOT_EncoderResolutionParams in _vertical_stage:
_vertical_stage.MOT_EncoderResolutionParams_swigregister(MOT_EncoderResolutionParams)

def TLI_BuildDeviceList():
    return _vertical_stage.TLI_BuildDeviceList()

def TLI_GetDeviceListSize():
    return _vertical_stage.TLI_GetDeviceListSize()

def TLI_GetDeviceList(stringsReceiver):
    return _vertical_stage.TLI_GetDeviceList(stringsReceiver)

def TLI_GetDeviceListByType(stringsReceiver, typeID):
    return _vertical_stage.TLI_GetDeviceListByType(stringsReceiver, typeID)

def TLI_GetDeviceListByTypes(stringsReceiver, typeIDs, length):
    return _vertical_stage.TLI_GetDeviceListByTypes(stringsReceiver, typeIDs, length)

def TLI_GetDeviceListExt(receiveBuffer, sizeOfBuffer):
    return _vertical_stage.TLI_GetDeviceListExt(receiveBuffer, sizeOfBuffer)

def TLI_GetDeviceListByTypeExt(receiveBuffer, sizeOfBuffer, typeID):
    return _vertical_stage.TLI_GetDeviceListByTypeExt(receiveBuffer, sizeOfBuffer, typeID)

def TLI_GetDeviceListByTypesExt(receiveBuffer, sizeOfBuffer, typeIDs, length):
    return _vertical_stage.TLI_GetDeviceListByTypesExt(receiveBuffer, sizeOfBuffer, typeIDs, length)

def TLI_GetDeviceInfo(serialNo, info):
    return _vertical_stage.TLI_GetDeviceInfo(serialNo, info)

def TLI_InitializeSimulations():
    return _vertical_stage.TLI_InitializeSimulations()

def TLI_UninitializeSimulations():
    return _vertical_stage.TLI_UninitializeSimulations()

def KVS_Open(serialNo):
    return _vertical_stage.KVS_Open(serialNo)

def KVS_Close(serialNo):
    return _vertical_stage.KVS_Close(serialNo)

def KVS_CheckConnection(serialNo):
    return _vertical_stage.KVS_CheckConnection(serialNo)

def KVS_Identify(serialNo):
    return _vertical_stage.KVS_Identify(serialNo)

def KVS_RequestLEDswitches(serialNo):
    return _vertical_stage.KVS_RequestLEDswitches(serialNo)

def KVS_GetLEDswitches(serialNo):
    return _vertical_stage.KVS_GetLEDswitches(serialNo)

def KVS_SetLEDswitches(serialNo, LEDswitches):
    return _vertical_stage.KVS_SetLEDswitches(serialNo, LEDswitches)

def KVS_GetHardwareInfo(serialNo, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState):
    return _vertical_stage.KVS_GetHardwareInfo(serialNo, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState)

def KVS_GetHardwareInfoBlock(serialNo, hardwareInfo):
    return _vertical_stage.KVS_GetHardwareInfoBlock(serialNo, hardwareInfo)

def KVS_GetHubBay(serialNo):
    return _vertical_stage.KVS_GetHubBay(serialNo)

def KVS_GetSoftwareVersion(serialNo):
    return _vertical_stage.KVS_GetSoftwareVersion(serialNo)

def KVS_LoadSettings(serialNo):
    return _vertical_stage.KVS_LoadSettings(serialNo)

def KVS_LoadNamedSettings(serialNo, settingsName):
    return _vertical_stage.KVS_LoadNamedSettings(serialNo, settingsName)

def KVS_PersistSettings(serialNo):
    return _vertical_stage.KVS_PersistSettings(serialNo)

def KVS_ResetStageToDefaults(serialNo):
    return _vertical_stage.KVS_ResetStageToDefaults(serialNo)

def KVS_DisableChannel(serialNo):
    return _vertical_stage.KVS_DisableChannel(serialNo)

def KVS_EnableChannel(serialNo):
    return _vertical_stage.KVS_EnableChannel(serialNo)

def KVS_CanDeviceLockFrontPanel(serialNo):
    return _vertical_stage.KVS_CanDeviceLockFrontPanel(serialNo)

def KVS_GetFrontPanelLocked(serialNo):
    return _vertical_stage.KVS_GetFrontPanelLocked(serialNo)

def KVS_RequestFrontPanelLocked(serialNo):
    return _vertical_stage.KVS_RequestFrontPanelLocked(serialNo)

def KVS_SetFrontPanelLock(serialNo, locked):
    return _vertical_stage.KVS_SetFrontPanelLock(serialNo, locked)

def KVS_GetNumberPositions(serialNo):
    return _vertical_stage.KVS_GetNumberPositions(serialNo)

def KVS_MoveToPosition(serialNo, index):
    return _vertical_stage.KVS_MoveToPosition(serialNo, index)

def KVS_GetPosition(serialNo):
    return _vertical_stage.KVS_GetPosition(serialNo)

def KVS_CanHome(serialNo):
    return _vertical_stage.KVS_CanHome(serialNo)

def KVS_NeedsHoming(serialNo):
    return _vertical_stage.KVS_NeedsHoming(serialNo)

def KVS_CanMoveWithoutHomingFirst(serialNo):
    return _vertical_stage.KVS_CanMoveWithoutHomingFirst(serialNo)

def KVS_Home(serialNo):
    return _vertical_stage.KVS_Home(serialNo)

def KVS_ClearMessageQueue(serialNo):
    return _vertical_stage.KVS_ClearMessageQueue(serialNo)

def KVS_RegisterMessageCallback(serialNo, functionPointer):
    return _vertical_stage.KVS_RegisterMessageCallback(serialNo, functionPointer)

def KVS_MessageQueueSize(serialNo):
    return _vertical_stage.KVS_MessageQueueSize(serialNo)

def KVS_GetNextMessage(serialNo, messageType, messageID, messageData):
    return _vertical_stage.KVS_GetNextMessage(serialNo, messageType, messageID, messageData)

def KVS_WaitForMessage(serialNo, messageType, messageID, messageData):
    return _vertical_stage.KVS_WaitForMessage(serialNo, messageType, messageID, messageData)

def KVS_RequestHomingParams(serialNo):
    return _vertical_stage.KVS_RequestHomingParams(serialNo)

def KVS_GetHomingVelocity(serialNo):
    return _vertical_stage.KVS_GetHomingVelocity(serialNo)

def KVS_SetHomingVelocity(serialNo, velocity):
    return _vertical_stage.KVS_SetHomingVelocity(serialNo, velocity)

def KVS_MoveRelative(serialNo, displacement):
    return _vertical_stage.KVS_MoveRelative(serialNo, displacement)

def KVS_RequestJogParams(serialNo):
    return _vertical_stage.KVS_RequestJogParams(serialNo)

def KVS_GetJogMode(serialNo, mode, stopMode):
    return _vertical_stage.KVS_GetJogMode(serialNo, mode, stopMode)

def KVS_SetJogMode(serialNo, mode, stopMode):
    return _vertical_stage.KVS_SetJogMode(serialNo, mode, stopMode)

def KVS_GetJogStepSize(serialNo):
    return _vertical_stage.KVS_GetJogStepSize(serialNo)

def KVS_SetJogStepSize(serialNo, stepSize):
    return _vertical_stage.KVS_SetJogStepSize(serialNo, stepSize)

def KVS_GetJogVelParams(serialNo, acceleration, maxVelocity):
    return _vertical_stage.KVS_GetJogVelParams(serialNo, acceleration, maxVelocity)

def KVS_SetJogVelParams(serialNo, acceleration, maxVelocity):
    return _vertical_stage.KVS_SetJogVelParams(serialNo, acceleration, maxVelocity)

def KVS_MoveJog(serialNo, jogDirection):
    return _vertical_stage.KVS_MoveJog(serialNo, jogDirection)

def KVS_RequestVelParams(serialNo):
    return _vertical_stage.KVS_RequestVelParams(serialNo)

def KVS_GetVelParams(serialNo, acceleration, maxVelocity):
    return _vertical_stage.KVS_GetVelParams(serialNo, acceleration, maxVelocity)

def KVS_SetVelParams(serialNo, acceleration, maxVelocity):
    return _vertical_stage.KVS_SetVelParams(serialNo, acceleration, maxVelocity)

def KVS_MoveAtVelocity(serialNo, direction):
    return _vertical_stage.KVS_MoveAtVelocity(serialNo, direction)

def KVS_SetDirection(serialNo, reverse):
    return _vertical_stage.KVS_SetDirection(serialNo, reverse)

def KVS_StopImmediate(serialNo):
    return _vertical_stage.KVS_StopImmediate(serialNo)

def KVS_StopProfiled(serialNo):
    return _vertical_stage.KVS_StopProfiled(serialNo)

def KVS_RequestBacklash(serialNo):
    return _vertical_stage.KVS_RequestBacklash(serialNo)

def KVS_GetBacklash(serialNo):
    return _vertical_stage.KVS_GetBacklash(serialNo)

def KVS_SetBacklash(serialNo, distance):
    return _vertical_stage.KVS_SetBacklash(serialNo, distance)

def KVS_GetPositionCounter(serialNo):
    return _vertical_stage.KVS_GetPositionCounter(serialNo)

def KVS_SetPositionCounter(serialNo, count):
    return _vertical_stage.KVS_SetPositionCounter(serialNo, count)

def KVS_RequestEncoderCounter(serialNo):
    return _vertical_stage.KVS_RequestEncoderCounter(serialNo)

def KVS_GetEncoderCounter(serialNo):
    return _vertical_stage.KVS_GetEncoderCounter(serialNo)

def KVS_SetEncoderCounter(serialNo, count):
    return _vertical_stage.KVS_SetEncoderCounter(serialNo, count)

def KVS_GetSoftLimitMode(serialNo):
    return _vertical_stage.KVS_GetSoftLimitMode(serialNo)

def KVS_SetLimitsSoftwareApproachPolicy(serialNo, limitsSoftwareApproachPolicy):
    return _vertical_stage.KVS_SetLimitsSoftwareApproachPolicy(serialNo, limitsSoftwareApproachPolicy)

def KVS_RequestTriggerConfigParams(serialNo):
    return _vertical_stage.KVS_RequestTriggerConfigParams(serialNo)

def KVS_GetTriggerConfigParams(serialNo, trigger1Mode, trigger1Polarity, trigger2Mode, trigger2Polarity):
    return _vertical_stage.KVS_GetTriggerConfigParams(serialNo, trigger1Mode, trigger1Polarity, trigger2Mode, trigger2Polarity)

def KVS_SetTriggerConfigParams(serialNo, trigger1Mode, trigger1Polarity, trigger2Mode, trigger2Polarity):
    return _vertical_stage.KVS_SetTriggerConfigParams(serialNo, trigger1Mode, trigger1Polarity, trigger2Mode, trigger2Polarity)

def KVS_RequestPosTriggerParams(serialNo):
    return _vertical_stage.KVS_RequestPosTriggerParams(serialNo)

def KVS_GetTriggerParamsParams(serialNo, triggerStartPositionFwd, triggerIntervalFwd, triggerPulseCountFwd, triggerStartPositionRev, triggerIntervalRev, triggerPulseCountRev, triggerPulseWidth, cycleCount):
    return _vertical_stage.KVS_GetTriggerParamsParams(serialNo, triggerStartPositionFwd, triggerIntervalFwd, triggerPulseCountFwd, triggerStartPositionRev, triggerIntervalRev, triggerPulseCountRev, triggerPulseWidth, cycleCount)

def KVS_SetTriggerParamsParams(serialNo, triggerStartPositionFwd, triggerIntervalFwd, triggerPulseCountFwd, triggerStartPositionRev, triggerIntervalRev, triggerPulseCountRev, triggerPulseWidth, cycleCount):
    return _vertical_stage.KVS_SetTriggerParamsParams(serialNo, triggerStartPositionFwd, triggerIntervalFwd, triggerPulseCountFwd, triggerStartPositionRev, triggerIntervalRev, triggerPulseCountRev, triggerPulseWidth, cycleCount)

def KVS_GetTriggerConfigParamsBlock(serialNo, triggerConfigParams):
    return _vertical_stage.KVS_GetTriggerConfigParamsBlock(serialNo, triggerConfigParams)

def KVS_SetTriggerConfigParamsBlock(serialNo, triggerConfigParams):
    return _vertical_stage.KVS_SetTriggerConfigParamsBlock(serialNo, triggerConfigParams)

def KVS_GetTriggerParamsParamsBlock(serialNo, triggerParamsParams):
    return _vertical_stage.KVS_GetTriggerParamsParamsBlock(serialNo, triggerParamsParams)

def KVS_SetTriggerParamsParamsBlock(serialNo, triggerParamsParams):
    return _vertical_stage.KVS_SetTriggerParamsParamsBlock(serialNo, triggerParamsParams)

def KVS_GetVelParamsBlock(serialNo, velocityParams):
    return _vertical_stage.KVS_GetVelParamsBlock(serialNo, velocityParams)

def KVS_SetVelParamsBlock(serialNo, velocityParams):
    return _vertical_stage.KVS_SetVelParamsBlock(serialNo, velocityParams)

def KVS_SetMoveAbsolutePosition(serialNo, position):
    return _vertical_stage.KVS_SetMoveAbsolutePosition(serialNo, position)

def KVS_RequestMoveAbsolutePosition(serialNo):
    return _vertical_stage.KVS_RequestMoveAbsolutePosition(serialNo)

def KVS_GetMoveAbsolutePosition(serialNo):
    return _vertical_stage.KVS_GetMoveAbsolutePosition(serialNo)

def KVS_MoveAbsolute(serialNo):
    return _vertical_stage.KVS_MoveAbsolute(serialNo)

def KVS_SetMoveRelativeDistance(serialNo, distance):
    return _vertical_stage.KVS_SetMoveRelativeDistance(serialNo, distance)

def KVS_RequestMoveRelativeDistance(serialNo):
    return _vertical_stage.KVS_RequestMoveRelativeDistance(serialNo)

def KVS_GetMoveRelativeDistance(serialNo):
    return _vertical_stage.KVS_GetMoveRelativeDistance(serialNo)

def KVS_MoveRelativeDistance(serialNo):
    return _vertical_stage.KVS_MoveRelativeDistance(serialNo)

def KVS_GetHomingParamsBlock(serialNo, homingParams):
    return _vertical_stage.KVS_GetHomingParamsBlock(serialNo, homingParams)

def KVS_SetHomingParamsBlock(serialNo, homingParams):
    return _vertical_stage.KVS_SetHomingParamsBlock(serialNo, homingParams)

def KVS_GetJogParamsBlock(serialNo, jogParams):
    return _vertical_stage.KVS_GetJogParamsBlock(serialNo, jogParams)

def KVS_SetJogParamsBlock(serialNo, jogParams):
    return _vertical_stage.KVS_SetJogParamsBlock(serialNo, jogParams)

def KVS_RequestDCPIDParams(serialNo):
    return _vertical_stage.KVS_RequestDCPIDParams(serialNo)

def KVS_GetDCPIDParams(serialNo, DCproportionalIntegralDerivativeParams):
    return _vertical_stage.KVS_GetDCPIDParams(serialNo, DCproportionalIntegralDerivativeParams)

def KVS_SetDCPIDParams(serialNo, DCproportionalIntegralDerivativeParams):
    return _vertical_stage.KVS_SetDCPIDParams(serialNo, DCproportionalIntegralDerivativeParams)

def KVS_RequestTrackSettleParams(serialNo):
    return _vertical_stage.KVS_RequestTrackSettleParams(serialNo)

def KVS_GetTrackSettleParams(serialNo, settleParams):
    return _vertical_stage.KVS_GetTrackSettleParams(serialNo, settleParams)

def KVS_SetTrackSettleParams(serialNo, settleParams):
    return _vertical_stage.KVS_SetTrackSettleParams(serialNo, settleParams)

def KVS_SuspendMoveMessages(serialNo):
    return _vertical_stage.KVS_SuspendMoveMessages(serialNo)

def KVS_ResumeMoveMessages(serialNo):
    return _vertical_stage.KVS_ResumeMoveMessages(serialNo)

def KVS_RequestPosition(serialNo):
    return _vertical_stage.KVS_RequestPosition(serialNo)

def KVS_RequestStatusBits(serialNo):
    return _vertical_stage.KVS_RequestStatusBits(serialNo)

def KVS_GetStatusBits(serialNo):
    return _vertical_stage.KVS_GetStatusBits(serialNo)

def KVS_StartPolling(serialNo, milliseconds):
    return _vertical_stage.KVS_StartPolling(serialNo, milliseconds)

def KVS_PollingDuration(serialNo):
    return _vertical_stage.KVS_PollingDuration(serialNo)

def KVS_StopPolling(serialNo):
    return _vertical_stage.KVS_StopPolling(serialNo)

def KVS_TimeSinceLastMsgReceived(serialNo, lastUpdateTimeMS):
    return _vertical_stage.KVS_TimeSinceLastMsgReceived(serialNo, lastUpdateTimeMS)

def KVS_EnableLastMsgTimer(serialNo, enable, lastMsgTimeout):
    return _vertical_stage.KVS_EnableLastMsgTimer(serialNo, enable, lastMsgTimeout)

def KVS_HasLastMsgTimerOverrun(serialNo):
    return _vertical_stage.KVS_HasLastMsgTimerOverrun(serialNo)

def KVS_RequestSettings(serialNo):
    return _vertical_stage.KVS_RequestSettings(serialNo)

def KVS_GetStageAxisMinPos(serialNo):
    return _vertical_stage.KVS_GetStageAxisMinPos(serialNo)

def KVS_GetStageAxisMaxPos(serialNo):
    return _vertical_stage.KVS_GetStageAxisMaxPos(serialNo)

def KVS_SetStageAxisLimits(serialNo, minPosition, maxPosition):
    return _vertical_stage.KVS_SetStageAxisLimits(serialNo, minPosition, maxPosition)

def KVS_SetMotorTravelMode(serialNo, travelMode):
    return _vertical_stage.KVS_SetMotorTravelMode(serialNo, travelMode)

def KVS_GetMotorTravelMode(serialNo):
    return _vertical_stage.KVS_GetMotorTravelMode(serialNo)

def KVS_SetMotorParams(serialNo, stepsPerRev, gearBoxRatio, pitch):
    return _vertical_stage.KVS_SetMotorParams(serialNo, stepsPerRev, gearBoxRatio, pitch)

def KVS_GetMotorParams(serialNo, stepsPerRev, gearBoxRatio, pitch):
    return _vertical_stage.KVS_GetMotorParams(serialNo, stepsPerRev, gearBoxRatio, pitch)

def KVS_SetMotorParamsExt(serialNo, stepsPerRev, gearBoxRatio, pitch):
    return _vertical_stage.KVS_SetMotorParamsExt(serialNo, stepsPerRev, gearBoxRatio, pitch)

def KVS_GetMotorParamsExt(serialNo, stepsPerRev, gearBoxRatio, pitch):
    return _vertical_stage.KVS_GetMotorParamsExt(serialNo, stepsPerRev, gearBoxRatio, pitch)

def KVS_SetMotorVelocityLimits(serialNo, maxVelocity, maxAcceleration):
    return _vertical_stage.KVS_SetMotorVelocityLimits(serialNo, maxVelocity, maxAcceleration)

def KVS_GetMotorVelocityLimits(serialNo, maxVelocity, maxAcceleration):
    return _vertical_stage.KVS_GetMotorVelocityLimits(serialNo, maxVelocity, maxAcceleration)

def KVS_SetMotorTravelLimits(serialNo, minPosition, maxPosition):
    return _vertical_stage.KVS_SetMotorTravelLimits(serialNo, minPosition, maxPosition)

def KVS_GetMotorTravelLimits(serialNo, minPosition, maxPosition):
    return _vertical_stage.KVS_GetMotorTravelLimits(serialNo, minPosition, maxPosition)

def KVS_GetRealValueFromDeviceUnit(serialNo, device_unit, real_unit, unitType):
    return _vertical_stage.KVS_GetRealValueFromDeviceUnit(serialNo, device_unit, real_unit, unitType)

def KVS_GetDeviceUnitFromRealValue(serialNo, real_unit, device_unit, unitType):
    return _vertical_stage.KVS_GetDeviceUnitFromRealValue(serialNo, real_unit, device_unit, unitType)

def KVS_RequestEncoderResolutionParams(serialNo):
    return _vertical_stage.KVS_RequestEncoderResolutionParams(serialNo)

def KVS_GetEncoderResolutionParams(serialNo, resolutionParams):
    return _vertical_stage.KVS_GetEncoderResolutionParams(serialNo, resolutionParams)

def KVS_RequestDigitalOutputs(serialNo):
    return _vertical_stage.KVS_RequestDigitalOutputs(serialNo)

def KVS_GetDigitalOutputs(serialNo):
    return _vertical_stage.KVS_GetDigitalOutputs(serialNo)

def KVS_SetDigitalOutputs(serialNo, outputsBits):
    return _vertical_stage.KVS_SetDigitalOutputs(serialNo, outputsBits)

