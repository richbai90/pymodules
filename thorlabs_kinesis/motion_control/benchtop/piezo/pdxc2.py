# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _pdxc2
else:
    import _pdxc2

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


FT_OK = _pdxc2.FT_OK
FT_InvalidHandle = _pdxc2.FT_InvalidHandle
FT_DeviceNotFound = _pdxc2.FT_DeviceNotFound
FT_DeviceNotOpened = _pdxc2.FT_DeviceNotOpened
FT_IOError = _pdxc2.FT_IOError
FT_InsufficientResources = _pdxc2.FT_InsufficientResources
FT_InvalidParameter = _pdxc2.FT_InvalidParameter
FT_DeviceNotPresent = _pdxc2.FT_DeviceNotPresent
FT_IncorrectDevice = _pdxc2.FT_IncorrectDevice
MOT_NotMotor = _pdxc2.MOT_NotMotor
MOT_DCMotor = _pdxc2.MOT_DCMotor
MOT_StepperMotor = _pdxc2.MOT_StepperMotor
MOT_BrushlessMotor = _pdxc2.MOT_BrushlessMotor
MOT_CustomMotor = _pdxc2.MOT_CustomMotor
class TLI_DeviceInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    typeID = property(_pdxc2.TLI_DeviceInfo_typeID_get, _pdxc2.TLI_DeviceInfo_typeID_set)
    description = property(_pdxc2.TLI_DeviceInfo_description_get, _pdxc2.TLI_DeviceInfo_description_set)
    serialNo = property(_pdxc2.TLI_DeviceInfo_serialNo_get, _pdxc2.TLI_DeviceInfo_serialNo_set)
    PID = property(_pdxc2.TLI_DeviceInfo_PID_get, _pdxc2.TLI_DeviceInfo_PID_set)
    isKnownType = property(_pdxc2.TLI_DeviceInfo_isKnownType_get, _pdxc2.TLI_DeviceInfo_isKnownType_set)
    motorType = property(_pdxc2.TLI_DeviceInfo_motorType_get, _pdxc2.TLI_DeviceInfo_motorType_set)
    isPiezoDevice = property(_pdxc2.TLI_DeviceInfo_isPiezoDevice_get, _pdxc2.TLI_DeviceInfo_isPiezoDevice_set)
    isLaser = property(_pdxc2.TLI_DeviceInfo_isLaser_get, _pdxc2.TLI_DeviceInfo_isLaser_set)
    isCustomType = property(_pdxc2.TLI_DeviceInfo_isCustomType_get, _pdxc2.TLI_DeviceInfo_isCustomType_set)
    isRack = property(_pdxc2.TLI_DeviceInfo_isRack_get, _pdxc2.TLI_DeviceInfo_isRack_set)
    maxChannels = property(_pdxc2.TLI_DeviceInfo_maxChannels_get, _pdxc2.TLI_DeviceInfo_maxChannels_set)

    def __init__(self):
        _pdxc2.TLI_DeviceInfo_swiginit(self, _pdxc2.new_TLI_DeviceInfo())
    __swig_destroy__ = _pdxc2.delete_TLI_DeviceInfo

# Register TLI_DeviceInfo in _pdxc2:
_pdxc2.TLI_DeviceInfo_swigregister(TLI_DeviceInfo)
class TLI_HardwareInformation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    serialNumber = property(_pdxc2.TLI_HardwareInformation_serialNumber_get, _pdxc2.TLI_HardwareInformation_serialNumber_set)
    modelNumber = property(_pdxc2.TLI_HardwareInformation_modelNumber_get, _pdxc2.TLI_HardwareInformation_modelNumber_set)
    type = property(_pdxc2.TLI_HardwareInformation_type_get, _pdxc2.TLI_HardwareInformation_type_set)
    firmwareVersion = property(_pdxc2.TLI_HardwareInformation_firmwareVersion_get, _pdxc2.TLI_HardwareInformation_firmwareVersion_set)
    notes = property(_pdxc2.TLI_HardwareInformation_notes_get, _pdxc2.TLI_HardwareInformation_notes_set)
    deviceDependantData = property(_pdxc2.TLI_HardwareInformation_deviceDependantData_get, _pdxc2.TLI_HardwareInformation_deviceDependantData_set)
    hardwareVersion = property(_pdxc2.TLI_HardwareInformation_hardwareVersion_get, _pdxc2.TLI_HardwareInformation_hardwareVersion_set)
    modificationState = property(_pdxc2.TLI_HardwareInformation_modificationState_get, _pdxc2.TLI_HardwareInformation_modificationState_set)
    numChannels = property(_pdxc2.TLI_HardwareInformation_numChannels_get, _pdxc2.TLI_HardwareInformation_numChannels_set)

    def __init__(self):
        _pdxc2.TLI_HardwareInformation_swiginit(self, _pdxc2.new_TLI_HardwareInformation())
    __swig_destroy__ = _pdxc2.delete_TLI_HardwareInformation

# Register TLI_HardwareInformation in _pdxc2:
_pdxc2.TLI_HardwareInformation_swigregister(TLI_HardwareInformation)
PZ_Undefined = _pdxc2.PZ_Undefined
PZ_OpenLoop = _pdxc2.PZ_OpenLoop
PZ_CloseLoop = _pdxc2.PZ_CloseLoop
PZ_OpenLoopSmooth = _pdxc2.PZ_OpenLoopSmooth
PZ_CloseLoopSmooth = _pdxc2.PZ_CloseLoopSmooth
MOT_TravelDirectionDisabled = _pdxc2.MOT_TravelDirectionDisabled
MOT_Forwards = _pdxc2.MOT_Forwards
MOT_Reverse = _pdxc2.MOT_Reverse
JogContinuous = _pdxc2.JogContinuous
JogStep = _pdxc2.JogStep
class PDXC2_JogParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    JogMode = property(_pdxc2.PDXC2_JogParameters_JogMode_get, _pdxc2.PDXC2_JogParameters_JogMode_set)
    OpenLoopStepSize = property(_pdxc2.PDXC2_JogParameters_OpenLoopStepSize_get, _pdxc2.PDXC2_JogParameters_OpenLoopStepSize_set)
    OpenLoopStepRate = property(_pdxc2.PDXC2_JogParameters_OpenLoopStepRate_get, _pdxc2.PDXC2_JogParameters_OpenLoopStepRate_set)
    OpenLoopAcceleration = property(_pdxc2.PDXC2_JogParameters_OpenLoopAcceleration_get, _pdxc2.PDXC2_JogParameters_OpenLoopAcceleration_set)
    ClosedLoopStepSize = property(_pdxc2.PDXC2_JogParameters_ClosedLoopStepSize_get, _pdxc2.PDXC2_JogParameters_ClosedLoopStepSize_set)
    ClosedLoopSpeed = property(_pdxc2.PDXC2_JogParameters_ClosedLoopSpeed_get, _pdxc2.PDXC2_JogParameters_ClosedLoopSpeed_set)
    ClosedLoopAcceleration = property(_pdxc2.PDXC2_JogParameters_ClosedLoopAcceleration_get, _pdxc2.PDXC2_JogParameters_ClosedLoopAcceleration_set)

    def __init__(self):
        _pdxc2.PDXC2_JogParameters_swiginit(self, _pdxc2.new_PDXC2_JogParameters())
    __swig_destroy__ = _pdxc2.delete_PDXC2_JogParameters

# Register PDXC2_JogParameters in _pdxc2:
_pdxc2.PDXC2_JogParameters_swigregister(PDXC2_JogParameters)
BothDirections = _pdxc2.BothDirections
OneOutputPerDirection = _pdxc2.OneOutputPerDirection
class PZ_AmpOutParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Mode = property(_pdxc2.PZ_AmpOutParameters_Mode_get, _pdxc2.PZ_AmpOutParameters_Mode_set)
    ForwardAmplitude = property(_pdxc2.PZ_AmpOutParameters_ForwardAmplitude_get, _pdxc2.PZ_AmpOutParameters_ForwardAmplitude_set)
    ReverseAmplitude = property(_pdxc2.PZ_AmpOutParameters_ReverseAmplitude_get, _pdxc2.PZ_AmpOutParameters_ReverseAmplitude_set)

    def __init__(self):
        _pdxc2.PZ_AmpOutParameters_swiginit(self, _pdxc2.new_PZ_AmpOutParameters())
    __swig_destroy__ = _pdxc2.delete_PZ_AmpOutParameters

# Register PZ_AmpOutParameters in _pdxc2:
_pdxc2.PZ_AmpOutParameters_swigregister(PZ_AmpOutParameters)
class PZ_StageAxisParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    stageID = property(_pdxc2.PZ_StageAxisParameters_stageID_get, _pdxc2.PZ_StageAxisParameters_stageID_set)
    axisID = property(_pdxc2.PZ_StageAxisParameters_axisID_get, _pdxc2.PZ_StageAxisParameters_axisID_set)
    partNumber = property(_pdxc2.PZ_StageAxisParameters_partNumber_get, _pdxc2.PZ_StageAxisParameters_partNumber_set)
    serialNumber = property(_pdxc2.PZ_StageAxisParameters_serialNumber_get, _pdxc2.PZ_StageAxisParameters_serialNumber_set)
    countsPerUnit = property(_pdxc2.PZ_StageAxisParameters_countsPerUnit_get, _pdxc2.PZ_StageAxisParameters_countsPerUnit_set)
    minPosition = property(_pdxc2.PZ_StageAxisParameters_minPosition_get, _pdxc2.PZ_StageAxisParameters_minPosition_set)
    maxPosition = property(_pdxc2.PZ_StageAxisParameters_maxPosition_get, _pdxc2.PZ_StageAxisParameters_maxPosition_set)
    maxAcceleration = property(_pdxc2.PZ_StageAxisParameters_maxAcceleration_get, _pdxc2.PZ_StageAxisParameters_maxAcceleration_set)
    maxDeceleration = property(_pdxc2.PZ_StageAxisParameters_maxDeceleration_get, _pdxc2.PZ_StageAxisParameters_maxDeceleration_set)
    maxVelocity = property(_pdxc2.PZ_StageAxisParameters_maxVelocity_get, _pdxc2.PZ_StageAxisParameters_maxVelocity_set)
    reserved1 = property(_pdxc2.PZ_StageAxisParameters_reserved1_get, _pdxc2.PZ_StageAxisParameters_reserved1_set)
    reserved2 = property(_pdxc2.PZ_StageAxisParameters_reserved2_get, _pdxc2.PZ_StageAxisParameters_reserved2_set)
    reserved3 = property(_pdxc2.PZ_StageAxisParameters_reserved3_get, _pdxc2.PZ_StageAxisParameters_reserved3_set)
    reserved4 = property(_pdxc2.PZ_StageAxisParameters_reserved4_get, _pdxc2.PZ_StageAxisParameters_reserved4_set)
    reserved5 = property(_pdxc2.PZ_StageAxisParameters_reserved5_get, _pdxc2.PZ_StageAxisParameters_reserved5_set)
    reserved6 = property(_pdxc2.PZ_StageAxisParameters_reserved6_get, _pdxc2.PZ_StageAxisParameters_reserved6_set)
    reserved7 = property(_pdxc2.PZ_StageAxisParameters_reserved7_get, _pdxc2.PZ_StageAxisParameters_reserved7_set)
    reserved8 = property(_pdxc2.PZ_StageAxisParameters_reserved8_get, _pdxc2.PZ_StageAxisParameters_reserved8_set)

    def __init__(self):
        _pdxc2.PZ_StageAxisParameters_swiginit(self, _pdxc2.new_PZ_StageAxisParameters())
    __swig_destroy__ = _pdxc2.delete_PZ_StageAxisParameters

# Register PZ_StageAxisParameters in _pdxc2:
_pdxc2.PZ_StageAxisParameters_swigregister(PZ_StageAxisParameters)
Manual = _pdxc2.Manual
AnalogRising = _pdxc2.AnalogRising
AnalogFalling = _pdxc2.AnalogFalling
FixedStepRising = _pdxc2.FixedStepRising
FixedStepFalling = _pdxc2.FixedStepFalling
TwoPositionRising = _pdxc2.TwoPositionRising
TwoPositionFalling = _pdxc2.TwoPositionFalling
class PDXC2_ClosedLoopParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RefSpeed = property(_pdxc2.PDXC2_ClosedLoopParameters_RefSpeed_get, _pdxc2.PDXC2_ClosedLoopParameters_RefSpeed_set)
    Proportional = property(_pdxc2.PDXC2_ClosedLoopParameters_Proportional_get, _pdxc2.PDXC2_ClosedLoopParameters_Proportional_set)
    Integral = property(_pdxc2.PDXC2_ClosedLoopParameters_Integral_get, _pdxc2.PDXC2_ClosedLoopParameters_Integral_set)
    Differential = property(_pdxc2.PDXC2_ClosedLoopParameters_Differential_get, _pdxc2.PDXC2_ClosedLoopParameters_Differential_set)
    Acceleration = property(_pdxc2.PDXC2_ClosedLoopParameters_Acceleration_get, _pdxc2.PDXC2_ClosedLoopParameters_Acceleration_set)

    def __init__(self):
        _pdxc2.PDXC2_ClosedLoopParameters_swiginit(self, _pdxc2.new_PDXC2_ClosedLoopParameters())
    __swig_destroy__ = _pdxc2.delete_PDXC2_ClosedLoopParameters

# Register PDXC2_ClosedLoopParameters in _pdxc2:
_pdxc2.PDXC2_ClosedLoopParameters_swigregister(PDXC2_ClosedLoopParameters)
class PDXC2_OpenLoopMoveParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    StepSize = property(_pdxc2.PDXC2_OpenLoopMoveParameters_StepSize_get, _pdxc2.PDXC2_OpenLoopMoveParameters_StepSize_set)

    def __init__(self):
        _pdxc2.PDXC2_OpenLoopMoveParameters_swiginit(self, _pdxc2.new_PDXC2_OpenLoopMoveParameters())
    __swig_destroy__ = _pdxc2.delete_PDXC2_OpenLoopMoveParameters

# Register PDXC2_OpenLoopMoveParameters in _pdxc2:
_pdxc2.PDXC2_OpenLoopMoveParameters_swigregister(PDXC2_OpenLoopMoveParameters)
class PDXC2_Status(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Position = property(_pdxc2.PDXC2_Status_Position_get, _pdxc2.PDXC2_Status_Position_set)
    Unused = property(_pdxc2.PDXC2_Status_Unused_get, _pdxc2.PDXC2_Status_Unused_set)
    StatusBits = property(_pdxc2.PDXC2_Status_StatusBits_get, _pdxc2.PDXC2_Status_StatusBits_set)

    def __init__(self):
        _pdxc2.PDXC2_Status_swiginit(self, _pdxc2.new_PDXC2_Status())
    __swig_destroy__ = _pdxc2.delete_PDXC2_Status

# Register PDXC2_Status in _pdxc2:
_pdxc2.PDXC2_Status_swigregister(PDXC2_Status)
class PDXC2_TriggerParams(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RiseFixedStep = property(_pdxc2.PDXC2_TriggerParams_RiseFixedStep_get, _pdxc2.PDXC2_TriggerParams_RiseFixedStep_set)
    FallFixedStep = property(_pdxc2.PDXC2_TriggerParams_FallFixedStep_get, _pdxc2.PDXC2_TriggerParams_FallFixedStep_set)
    RisePosition1 = property(_pdxc2.PDXC2_TriggerParams_RisePosition1_get, _pdxc2.PDXC2_TriggerParams_RisePosition1_set)
    FallPosition1 = property(_pdxc2.PDXC2_TriggerParams_FallPosition1_get, _pdxc2.PDXC2_TriggerParams_FallPosition1_set)
    RisePosition2 = property(_pdxc2.PDXC2_TriggerParams_RisePosition2_get, _pdxc2.PDXC2_TriggerParams_RisePosition2_set)
    FallPosition2 = property(_pdxc2.PDXC2_TriggerParams_FallPosition2_get, _pdxc2.PDXC2_TriggerParams_FallPosition2_set)
    AnalogInGain = property(_pdxc2.PDXC2_TriggerParams_AnalogInGain_get, _pdxc2.PDXC2_TriggerParams_AnalogInGain_set)
    AnalogInOffset = property(_pdxc2.PDXC2_TriggerParams_AnalogInOffset_get, _pdxc2.PDXC2_TriggerParams_AnalogInOffset_set)
    AnalogOutGain = property(_pdxc2.PDXC2_TriggerParams_AnalogOutGain_get, _pdxc2.PDXC2_TriggerParams_AnalogOutGain_set)
    AnalogOutOffset = property(_pdxc2.PDXC2_TriggerParams_AnalogOutOffset_get, _pdxc2.PDXC2_TriggerParams_AnalogOutOffset_set)

    def __init__(self):
        _pdxc2.PDXC2_TriggerParams_swiginit(self, _pdxc2.new_PDXC2_TriggerParams())
    __swig_destroy__ = _pdxc2.delete_PDXC2_TriggerParams

# Register PDXC2_TriggerParams in _pdxc2:
_pdxc2.PDXC2_TriggerParams_swigregister(PDXC2_TriggerParams)

def TLI_BuildDeviceList():
    return _pdxc2.TLI_BuildDeviceList()

def TLI_GetDeviceListSize():
    return _pdxc2.TLI_GetDeviceListSize()

def TLI_GetDeviceList(stringsReceiver):
    return _pdxc2.TLI_GetDeviceList(stringsReceiver)

def TLI_GetDeviceListByType(stringsReceiver, typeID):
    return _pdxc2.TLI_GetDeviceListByType(stringsReceiver, typeID)

def TLI_GetDeviceListByTypes(stringsReceiver, typeIDs, length):
    return _pdxc2.TLI_GetDeviceListByTypes(stringsReceiver, typeIDs, length)

def TLI_GetDeviceListExt(receiveBuffer, sizeOfBuffer):
    return _pdxc2.TLI_GetDeviceListExt(receiveBuffer, sizeOfBuffer)

def TLI_GetDeviceListByTypeExt(receiveBuffer, sizeOfBuffer, typeID):
    return _pdxc2.TLI_GetDeviceListByTypeExt(receiveBuffer, sizeOfBuffer, typeID)

def TLI_GetDeviceListByTypesExt(receiveBuffer, sizeOfBuffer, typeIDs, length):
    return _pdxc2.TLI_GetDeviceListByTypesExt(receiveBuffer, sizeOfBuffer, typeIDs, length)

def TLI_GetDeviceInfo(serialNo, info):
    return _pdxc2.TLI_GetDeviceInfo(serialNo, info)

def TLI_InitializeSimulations():
    return _pdxc2.TLI_InitializeSimulations()

def TLI_UninitializeSimulations():
    return _pdxc2.TLI_UninitializeSimulations()

def TLI_ScanEthernetRange(startIPAddress, endIPAddress, portNo, openTimeout, foundAddressesBuffer, sizeOfBuffer):
    return _pdxc2.TLI_ScanEthernetRange(startIPAddress, endIPAddress, portNo, openTimeout, foundAddressesBuffer, sizeOfBuffer)

def PDXC2_Open(serialNo):
    return _pdxc2.PDXC2_Open(serialNo)

def PDXC2_Close(serialNo):
    return _pdxc2.PDXC2_Close(serialNo)

def PDXC2_CheckConnection(serialNo):
    return _pdxc2.PDXC2_CheckConnection(serialNo)

def PDXC2_Identify(serialNo):
    return _pdxc2.PDXC2_Identify(serialNo)

def PDXC2_Disconnect(serialNo):
    return _pdxc2.PDXC2_Disconnect(serialNo)

def PDXC2_GetHardwareInfo(serialNo, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState):
    return _pdxc2.PDXC2_GetHardwareInfo(serialNo, modelNo, sizeOfModelNo, type, numChannels, notes, sizeOfNotes, firmwareVersion, hardwareVersion, modificationState)

def PDXC2_GetHardwareInfoBlock(serialNo, hardwareInfo):
    return _pdxc2.PDXC2_GetHardwareInfoBlock(serialNo, hardwareInfo)

def PDXC2_GetFirmwareVersion(serialNo):
    return _pdxc2.PDXC2_GetFirmwareVersion(serialNo)

def PDXC2_GetSoftwareVersion(serialNo):
    return _pdxc2.PDXC2_GetSoftwareVersion(serialNo)

def PDXC2_LoadSettings(serialNo):
    return _pdxc2.PDXC2_LoadSettings(serialNo)

def PDXC2_LoadNamedSettings(serialNo, settingsName):
    return _pdxc2.PDXC2_LoadNamedSettings(serialNo, settingsName)

def PDXC2_PersistSettings(serialNo):
    return _pdxc2.PDXC2_PersistSettings(serialNo)

def PDXC2_Disable(serialNo):
    return _pdxc2.PDXC2_Disable(serialNo)

def PDXC2_Enable(serialNo):
    return _pdxc2.PDXC2_Enable(serialNo)

def PDXC2_RegisterMessageCallback(serialNo, functionPointer):
    return _pdxc2.PDXC2_RegisterMessageCallback(serialNo, functionPointer)

def PDXC2_MessageQueueSize(serialNo):
    return _pdxc2.PDXC2_MessageQueueSize(serialNo)

def PDXC2_ClearMessageQueue(serialNo):
    return _pdxc2.PDXC2_ClearMessageQueue(serialNo)

def PDXC2_GetNextMessage(serialNo, messageType, messageID, messageData):
    return _pdxc2.PDXC2_GetNextMessage(serialNo, messageType, messageID, messageData)

def PDXC2_WaitForMessage(serialNo, messageType, messageID, messageData):
    return _pdxc2.PDXC2_WaitForMessage(serialNo, messageType, messageID, messageData)

def PDXC2_StartPolling(serialNo, milliseconds):
    return _pdxc2.PDXC2_StartPolling(serialNo, milliseconds)

def PDXC2_PollingDuration(serialNo):
    return _pdxc2.PDXC2_PollingDuration(serialNo)

def PDXC2_StopPolling(serialNo):
    return _pdxc2.PDXC2_StopPolling(serialNo)

def PDXC2_TimeSinceLastMsgReceived(serialNo, lastUpdateTimeMS):
    return _pdxc2.PDXC2_TimeSinceLastMsgReceived(serialNo, lastUpdateTimeMS)

def PDXC2_EnableLastMsgTimer(serialNo, enable, lastMsgTimeout):
    return _pdxc2.PDXC2_EnableLastMsgTimer(serialNo, enable, lastMsgTimeout)

def PDXC2_HasLastMsgTimerOverrun(serialNo):
    return _pdxc2.PDXC2_HasLastMsgTimerOverrun(serialNo)

def PDXC2_RequestSettings(serialNo):
    return _pdxc2.PDXC2_RequestSettings(serialNo)

def PDXC2_RequestStatus(serialNo):
    return _pdxc2.PDXC2_RequestStatus(serialNo)

def PDXC2_RequestStatusBits(serialNo):
    return _pdxc2.PDXC2_RequestStatusBits(serialNo)

def PDXC2_GetStatusBits(serialNo):
    return _pdxc2.PDXC2_GetStatusBits(serialNo)

def PDXC2_ResetParameters(serialNo):
    return _pdxc2.PDXC2_ResetParameters(serialNo)

def PDXC2_GetPositionControlMode(serialNo):
    return _pdxc2.PDXC2_GetPositionControlMode(serialNo)

def PDXC2_RequestPositionControlMode(serialNo):
    return _pdxc2.PDXC2_RequestPositionControlMode(serialNo)

def PDXC2_SetPositionControlMode(serialNo, mode):
    return _pdxc2.PDXC2_SetPositionControlMode(serialNo, mode)

def PDXC2_Home(serialNo):
    return _pdxc2.PDXC2_Home(serialNo)

def PDXC2_MoveJog(serialNo, jogDirection):
    return _pdxc2.PDXC2_MoveJog(serialNo, jogDirection)

def PDXC2_MoveStart(serialNo):
    return _pdxc2.PDXC2_MoveStart(serialNo)

def PDXC2_MoveStop(serialNo):
    return _pdxc2.PDXC2_MoveStop(serialNo)

def PDXC2_PulseParamsAcquireStart(serialNo):
    return _pdxc2.PDXC2_PulseParamsAcquireStart(serialNo)

def PDXC2_RequestClosedLoopParams(serialNo):
    return _pdxc2.PDXC2_RequestClosedLoopParams(serialNo)

def PDXC2_SetClosedLoopParams(serialNo, params):
    return _pdxc2.PDXC2_SetClosedLoopParams(serialNo, params)

def PDXC2_GetClosedLoopParams(serialNo, params):
    return _pdxc2.PDXC2_GetClosedLoopParams(serialNo, params)

def PDXC2_RequestClosedLoopTarget(serialNo):
    return _pdxc2.PDXC2_RequestClosedLoopTarget(serialNo)

def PDXC2_SetClosedLoopTarget(serialNo, target):
    return _pdxc2.PDXC2_SetClosedLoopTarget(serialNo, target)

def PDXC2_GetClosedLoopTarget(serialNo):
    return _pdxc2.PDXC2_GetClosedLoopTarget(serialNo)

def PDXC2_RequestOpenLoopMoveParams(serialNo):
    return _pdxc2.PDXC2_RequestOpenLoopMoveParams(serialNo)

def PDXC2_SetOpenLoopMoveParams(serialNo, params):
    return _pdxc2.PDXC2_SetOpenLoopMoveParams(serialNo, params)

def PDXC2_GetOpenLoopMoveParams(serialNo, params):
    return _pdxc2.PDXC2_GetOpenLoopMoveParams(serialNo, params)

def PDXC2_RequestJogParams(serialNo):
    return _pdxc2.PDXC2_RequestJogParams(serialNo)

def PDXC2_SetJogParams(serialNo, params):
    return _pdxc2.PDXC2_SetJogParams(serialNo, params)

def PDXC2_GetJogParams(serialNo, params):
    return _pdxc2.PDXC2_GetJogParams(serialNo, params)

def PDXC2_RequestAmpOutParams(serialNo):
    return _pdxc2.PDXC2_RequestAmpOutParams(serialNo)

def PDXC2_SetAmpOutParams(serialNo, params):
    return _pdxc2.PDXC2_SetAmpOutParams(serialNo, params)

def PDXC2_GetAmpOutParams(serialNo, params):
    return _pdxc2.PDXC2_GetAmpOutParams(serialNo, params)

def PDXC2_RequestAbnormalMoveDetectionEnabled(serialNo):
    return _pdxc2.PDXC2_RequestAbnormalMoveDetectionEnabled(serialNo)

def PDXC2_SetAbnormalMoveDetectionEnabled(serialNo, isEnabled):
    return _pdxc2.PDXC2_SetAbnormalMoveDetectionEnabled(serialNo, isEnabled)

def PDXC2_GetAbnormalMoveDetectionEnabled(serialNo):
    return _pdxc2.PDXC2_GetAbnormalMoveDetectionEnabled(serialNo)

def PDXC2_RequestExternalTriggerConfig(serialNo):
    return _pdxc2.PDXC2_RequestExternalTriggerConfig(serialNo)

def PDXC2_SetExternalTriggerConfig(serialNo, mode):
    return _pdxc2.PDXC2_SetExternalTriggerConfig(serialNo, mode)

def PDXC2_GetExternalTriggerConfig(serialNo):
    return _pdxc2.PDXC2_GetExternalTriggerConfig(serialNo)

def PDXC2_RequestExternalTriggerParams(serialNo):
    return _pdxc2.PDXC2_RequestExternalTriggerParams(serialNo)

def PDXC2_SetExternalTriggerParams(serialNo, params):
    return _pdxc2.PDXC2_SetExternalTriggerParams(serialNo, params)

def PDXC2_GetExternalTriggerParams(serialNo, params):
    return _pdxc2.PDXC2_GetExternalTriggerParams(serialNo, params)

def PDXC2_RequestExternalTriggerTarget(serialNo):
    return _pdxc2.PDXC2_RequestExternalTriggerTarget(serialNo)

def PDXC2_GetExternalTriggerTarget(serialNo):
    return _pdxc2.PDXC2_GetExternalTriggerTarget(serialNo)

def PDXC2_RequestStageAxisParams(serialNo):
    return _pdxc2.PDXC2_RequestStageAxisParams(serialNo)

def PDXC2_GetStageAxisParams(serialNo, params):
    return _pdxc2.PDXC2_GetStageAxisParams(serialNo, params)

def PDXC2_RequestPosition(serialNo):
    return _pdxc2.PDXC2_RequestPosition(serialNo)

def PDXC2_GetPosition(serialNo, position):
    return _pdxc2.PDXC2_GetPosition(serialNo, position)

